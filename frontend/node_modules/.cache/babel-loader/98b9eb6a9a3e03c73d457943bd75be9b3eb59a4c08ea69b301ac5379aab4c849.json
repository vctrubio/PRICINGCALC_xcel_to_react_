{"ast":null,"code":"var _jsxFileName = \"/Users/trtp/working/milo/final_pricecalc_master/frontend/src/components/WarehouseConfig.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/styles/ag-grid.css';\nimport 'ag-grid-community/styles/ag-theme-quartz.css';\nimport '../AppGrid.css';\nimport { useSkuForm } from './SkuForm';\nimport { SearchBar } from './SearchBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GridWarehouseConfig = () => {\n  _s();\n  const {\n    getData\n  } = useSkuForm();\n  const [gridApi, setGridApi] = useState(null);\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [search, setSearch] = useState('');\n  const [showForm, setShowForm] = useState(false);\n  const [rowData, setRowData] = useState([]);\n  const [colData, setColData] = useState([\n  // Update these column definitions to match your warehouse configuration data\n  {\n    headerName: 'Warehouse ID',\n    field: 'warehouse_id',\n    checkboxSelection: true,\n    headerCheckboxSelection: true,\n    headerCheckboxSelectionFilteredOnly: true\n  }, {\n    headerName: 'Location',\n    field: 'location',\n    editable: true\n  }\n  // Add more columns as needed\n  ]);\n  window.row = rowData;\n  useEffect(() => {\n    getData('warehouse-config').then(data => {\n      setRowData(data);\n    });\n  }, []);\n  const updateWarehouseConfigData = useCallback(param => {\n    setRowData([param, ...rowData]);\n  });\n  const handleCellValueChanged = async event => {\n    try {\n      for (let key in event.data) {\n        if (event.data[key] === undefined || event.data[key] === null) {\n          console.error(`Error: ${key} is empty`);\n          return;\n        }\n      }\n      const response = await axios.patch(`http://localhost:8000/warehouse-config/${event.data.warehouse_id}`, event.data);\n    } catch (error) {\n      console.error('Error updating Warehouse Config data:', error);\n    }\n  };\n  const getrowId = useCallback(params => {\n    return params.data.warehouse_id;\n  });\n  const onGridReady = params => {\n    setGridApi(params.api);\n  };\n  const onSelectionChanged = param => {\n    setSelectedRows(gridApi.getSelectedRows());\n  };\n  const onRowClicked = event => {\n    event.node.setSelected(!event.node.isSelected());\n  };\n  window.trow = selectedRows;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ag-theme-quartz-dark\",\n    style: {\n      height: '70vh',\n      width: 1270\n    },\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      title: \"Warehouse Config\",\n      titlecount: rowData.length,\n      search: search,\n      setSearch: setSearch,\n      data: rowData,\n      setData: setRowData,\n      selectedRows: selectedRows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AgGridReact, {\n      onGridReady: onGridReady,\n      getRowId: getrowId,\n      columnDefs: colData,\n      rowData: rowData,\n      defaultColDef: {\n        flex: 1,\n        filter: true,\n        sortable: true,\n        floatingFilter: true\n      },\n      onCellValueChanged: handleCellValueChanged,\n      onSelectionChanged: onSelectionChanged,\n      onRowClicked: onRowClicked,\n      suppressRowClickSelection: true,\n      animateRows: true,\n      rowSelection: 'multiple'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: showForm ? \"dark\" : \"primary\",\n        onClick: () => setShowForm(!showForm),\n        children: showForm ? 'Close Warehouse Config' : 'New Warehouse Config'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), showForm && /*#__PURE__*/_jsxDEV(WarehouseConfigForm, {\n        addWarehouseConfig: updateWarehouseConfigData,\n        rowData: rowData,\n        onClose: () => setShowForm(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(GridWarehouseConfig, \"5vtHV3ZzDFe0x6fo9RfaPegfzBg=\", false, function () {\n  return [useSkuForm];\n});\n_c = GridWarehouseConfig;\nvar _c;\n$RefreshReg$(_c, \"GridWarehouseConfig\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","Form","Button","axios","AgGridReact","useSkuForm","SearchBar","jsxDEV","_jsxDEV","GridWarehouseConfig","_s","getData","gridApi","setGridApi","selectedRows","setSelectedRows","search","setSearch","showForm","setShowForm","rowData","setRowData","colData","setColData","headerName","field","checkboxSelection","headerCheckboxSelection","headerCheckboxSelectionFilteredOnly","editable","window","row","then","data","updateWarehouseConfigData","param","handleCellValueChanged","event","key","undefined","console","error","response","patch","warehouse_id","getrowId","params","onGridReady","api","onSelectionChanged","getSelectedRows","onRowClicked","node","setSelected","isSelected","trow","className","style","height","width","children","title","titlecount","length","setData","fileName","_jsxFileName","lineNumber","columnNumber","getRowId","columnDefs","defaultColDef","flex","filter","sortable","floatingFilter","onCellValueChanged","suppressRowClickSelection","animateRows","rowSelection","variant","onClick","WarehouseConfigForm","addWarehouseConfig","onClose","_c","$RefreshReg$"],"sources":["/Users/trtp/working/milo/final_pricecalc_master/frontend/src/components/WarehouseConfig.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\nimport { Form, Button } from 'react-bootstrap';\nimport axios from 'axios'\nimport { AgGridReact } from 'ag-grid-react'\nimport 'ag-grid-community/styles/ag-grid.css'\nimport 'ag-grid-community/styles/ag-theme-quartz.css'\nimport '../AppGrid.css';\nimport { useSkuForm } from './SkuForm';\nimport { SearchBar } from './SearchBar';\n\nexport const GridWarehouseConfig = () => {\n    const { getData } = useSkuForm();\n\n    const [gridApi, setGridApi] = useState(null);\n    const [selectedRows, setSelectedRows] = useState([]);\n    const [search, setSearch] = useState('');\n    const [showForm, setShowForm] = useState(false);\n    const [rowData, setRowData] = useState([])\n    const [colData, setColData] = useState(\n        [\n            // Update these column definitions to match your warehouse configuration data\n            { headerName: 'Warehouse ID', field: 'warehouse_id', checkboxSelection: true, headerCheckboxSelection: true, headerCheckboxSelectionFilteredOnly: true },\n            { headerName: 'Location', field: 'location', editable: true },\n            // Add more columns as needed\n        ]\n    )\n\n    window.row = rowData\n\n    useEffect(() => {\n        getData('warehouse-config').then(data => {\n            setRowData(data);\n        });\n    }, []);\n\n    const updateWarehouseConfigData = useCallback((param) => {\n        setRowData([param, ...rowData])\n    })\n\n    const handleCellValueChanged = async (event) => {\n        try {\n            for (let key in event.data) {\n                if (event.data[key] === undefined || event.data[key] === null) {\n                    console.error(`Error: ${key} is empty`);\n                    return;\n                }\n            }\n            const response = await axios.patch(`http://localhost:8000/warehouse-config/${event.data.warehouse_id}`, event.data);\n        } catch (error) {\n            console.error('Error updating Warehouse Config data:', error);\n        }\n    }\n\n    const getrowId = useCallback(params => {\n        return params.data.warehouse_id\n    })\n\n    const onGridReady = params => {\n        setGridApi(params.api);\n    };\n\n    const onSelectionChanged = (param) => {\n        setSelectedRows(gridApi.getSelectedRows());\n    };\n\n    const onRowClicked = (event) => {\n        event.node.setSelected(!event.node.isSelected());\n    };\n\n    window.trow = selectedRows\n    return (\n        <div className=\"ag-theme-quartz-dark\" style={{ height: '70vh', width: 1270 }}>\n            <SearchBar title='Warehouse Config' titlecount={rowData.length} search={search} setSearch={setSearch} data={rowData} setData={setRowData} selectedRows={selectedRows}/>\n            <AgGridReact\n                onGridReady={onGridReady}\n                getRowId={getrowId}\n                columnDefs={colData}\n                rowData={rowData}\n                defaultColDef={{ flex: 1, filter: true, sortable: true, floatingFilter: true}}\n                onCellValueChanged={handleCellValueChanged}\n                onSelectionChanged={onSelectionChanged}\n                onRowClicked={onRowClicked}\n                suppressRowClickSelection={true}\n                animateRows={true}\n                rowSelection={'multiple'}\n            />\n            <div className='mt-4'>\n                <Button variant={showForm ? \"dark\" : \"primary\"} onClick={() => setShowForm(!showForm)}>\n                    {showForm ? 'Close Warehouse Config' : 'New Warehouse Config'}\n                </Button>\n                {showForm && <WarehouseConfigForm addWarehouseConfig={updateWarehouseConfigData} rowData={rowData} onClose={() => setShowForm(false)}/>}\n            </div>\n        </div >\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}