{"ast":null,"code":"// ag-grid-react v31.1.1\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar react_1 = require(\"react\");\nvar beansContext_1 = require(\"../beansContext\");\nvar useJsCellRenderer = function (showDetails, showTools, eCellValue, cellValueVersion, jsCellRendererRef, eGui) {\n  var context = react_1.useContext(beansContext_1.BeansContext).context;\n  var destroyCellRenderer = react_1.useCallback(function () {\n    var comp = jsCellRendererRef.current;\n    if (!comp) {\n      return;\n    }\n    var compGui = comp.getGui();\n    if (compGui && compGui.parentElement) {\n      compGui.parentElement.removeChild(compGui);\n    }\n    context.destroyBean(comp);\n    jsCellRendererRef.current = undefined;\n  }, []);\n  // create or refresh JS cell renderer\n  react_1.useEffect(function () {\n    var showValue = showDetails != null;\n    var jsCompDetails = showDetails && showDetails.compDetails && !showDetails.compDetails.componentFromFramework;\n    var waitingForToolsSetup = showTools && eCellValue == null;\n    var showComp = showValue && jsCompDetails && !waitingForToolsSetup;\n    // if not showing comp, destroy any existing one and return\n    if (!showComp) {\n      destroyCellRenderer();\n      return;\n    }\n    var compDetails = showDetails.compDetails;\n    if (jsCellRendererRef.current) {\n      // attempt refresh if refresh method exists\n      var comp_1 = jsCellRendererRef.current;\n      var attemptRefresh = comp_1.refresh != null && showDetails.force == false;\n      var refreshResult = attemptRefresh ? comp_1.refresh(compDetails.params) : false;\n      var refreshWorked = refreshResult === true || refreshResult === undefined;\n      // if refresh worked, nothing else to do\n      if (refreshWorked) {\n        return;\n      }\n      // if refresh didn't work, we destroy it and continue, so new cell renderer created below\n      destroyCellRenderer();\n    }\n    var promise = compDetails.newAgStackInstance();\n    ;\n    if (!promise) {\n      return;\n    }\n    var comp = promise.resolveNow(null, function (x) {\n      return x;\n    }); // js comps are never async\n    if (!comp) {\n      return;\n    }\n    var compGui = comp.getGui();\n    if (!compGui) {\n      return;\n    }\n    var parent = showTools ? eCellValue : eGui.current;\n    parent.appendChild(compGui);\n    jsCellRendererRef.current = comp;\n    // We do not return the destroy here as we want to keep the comp alive for our custom refresh approach above\n  }, [showDetails, showTools, cellValueVersion]);\n  // this effect makes sure destroyCellRenderer gets called when the\n  // component is destroyed. as the other effect only updates when there\n  // is a change in state\n  react_1.useEffect(function () {\n    return destroyCellRenderer;\n  }, []);\n};\nexports.default = useJsCellRenderer;","map":{"version":3,"names":["Object","defineProperty","exports","value","react_1","require","beansContext_1","useJsCellRenderer","showDetails","showTools","eCellValue","cellValueVersion","jsCellRendererRef","eGui","context","useContext","BeansContext","destroyCellRenderer","useCallback","comp","current","compGui","getGui","parentElement","removeChild","destroyBean","undefined","useEffect","showValue","jsCompDetails","compDetails","componentFromFramework","waitingForToolsSetup","showComp","comp_1","attemptRefresh","refresh","force","refreshResult","params","refreshWorked","promise","newAgStackInstance","resolveNow","x","parent","appendChild","default"],"sources":["/Users/trtp/working/milo/final_pricecalc_master/frontend/node_modules/ag-grid-react/lib/reactUi/cells/showJsRenderer.js"],"sourcesContent":["// ag-grid-react v31.1.1\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nvar beansContext_1 = require(\"../beansContext\");\nvar useJsCellRenderer = function (showDetails, showTools, eCellValue, cellValueVersion, jsCellRendererRef, eGui) {\n    var context = react_1.useContext(beansContext_1.BeansContext).context;\n    var destroyCellRenderer = react_1.useCallback(function () {\n        var comp = jsCellRendererRef.current;\n        if (!comp) {\n            return;\n        }\n        var compGui = comp.getGui();\n        if (compGui && compGui.parentElement) {\n            compGui.parentElement.removeChild(compGui);\n        }\n        context.destroyBean(comp);\n        jsCellRendererRef.current = undefined;\n    }, []);\n    // create or refresh JS cell renderer\n    react_1.useEffect(function () {\n        var showValue = showDetails != null;\n        var jsCompDetails = showDetails && showDetails.compDetails && !showDetails.compDetails.componentFromFramework;\n        var waitingForToolsSetup = showTools && eCellValue == null;\n        var showComp = showValue && jsCompDetails && !waitingForToolsSetup;\n        // if not showing comp, destroy any existing one and return\n        if (!showComp) {\n            destroyCellRenderer();\n            return;\n        }\n        var compDetails = showDetails.compDetails;\n        if (jsCellRendererRef.current) {\n            // attempt refresh if refresh method exists\n            var comp_1 = jsCellRendererRef.current;\n            var attemptRefresh = comp_1.refresh != null && showDetails.force == false;\n            var refreshResult = attemptRefresh ? comp_1.refresh(compDetails.params) : false;\n            var refreshWorked = refreshResult === true || refreshResult === undefined;\n            // if refresh worked, nothing else to do\n            if (refreshWorked) {\n                return;\n            }\n            // if refresh didn't work, we destroy it and continue, so new cell renderer created below\n            destroyCellRenderer();\n        }\n        var promise = compDetails.newAgStackInstance();\n        ;\n        if (!promise) {\n            return;\n        }\n        var comp = promise.resolveNow(null, function (x) { return x; }); // js comps are never async\n        if (!comp) {\n            return;\n        }\n        var compGui = comp.getGui();\n        if (!compGui) {\n            return;\n        }\n        var parent = showTools ? eCellValue : eGui.current;\n        parent.appendChild(compGui);\n        jsCellRendererRef.current = comp;\n        // We do not return the destroy here as we want to keep the comp alive for our custom refresh approach above\n    }, [showDetails, showTools, cellValueVersion]);\n    // this effect makes sure destroyCellRenderer gets called when the\n    // component is destroyed. as the other effect only updates when there\n    // is a change in state\n    react_1.useEffect(function () {\n        return destroyCellRenderer;\n    }, []);\n};\nexports.default = useJsCellRenderer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}