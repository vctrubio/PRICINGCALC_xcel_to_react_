{"ast":null,"code":"var _jsxFileName = \"/Users/trtp/working/milo/final_pricecalc_master/frontend/src/components/PackagingView.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from 'react';\nimport axios from 'axios';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/styles/ag-grid.css';\nimport 'ag-grid-community/styles/ag-theme-quartz.css';\nimport '../AppGrid.css';\nimport Form from 'react-bootstrap/Form';\nimport { getData } from './CskuForm';\nimport { SearchBar } from './SearchBar';\n\n// const PackagingForm = ({ updatePackaging, rowData, onClose }) => {\n//     return (\n//         <div>\n//             <div className='d-flex flex-row flex-start justify-content-between' onKeyDown={handleKeyPress} style={{ marginLeft: 42, marginRight: 42, marginTop: 24}}>\n//                 <Form onSubmit={handleSubmit}>\n//                     <div className=\"d-flex flex-row justify-content-between\" style={{ width: '100%' }}>\n//                         <div className=\"m-1\">\n//                             <Form.Label>Product ID</Form.Label>\n//                             <Form.Group controlId=\"product_id\">\n//                                 <Form.Control\n//                                     type=\"text\"\n//                                     name=\"product_id\"\n//                                     value={productData.product_id}\n//                                     onChange={handleChange}\n//                                     placeholder=\"Enter Product ID\"\n//                                     isInvalid={isFormValidated && !productData.product_id}\n//                                     isValid={isFormValidated && productData.product_id}\n//                                     style={{ backgroundColor: isValidName ? 'white' : 'rgba(225, 0, 0, 0.6)' }}\n//                                     required\n//                                 />\n//                             </Form.Group>\n//                         </div>\n//                         <div className=\"m-1\">\n//                             <Form.Group controlId=\"manufacturer\">\n//                                 <Form.Label>Manufacturer</Form.Label>\n//                                 <Form.Control\n//                                     type=\"text\"\n//                                     name=\"manufacturer\"\n//                                     value={productData.manufacturer}\n//                                     onChange={handleChange}\n//                                     placeholder=\"Enter Manufacturer\"\n//                                     isInvalid={isFormValidated && !productData.manufacturer}\n//                                     isValid={isFormValidated && productData.manufacturer}\n//                                     required\n//                                 />\n//                             </Form.Group>\n//                         </div>\n//                         <div className='m-1'>\n//                             <Form.Group controlId=\"price\">\n//                                 <Form.Label>Price</Form.Label>\n//                                 <Form.Control\n//                                     type=\"number\"\n//                                     name=\"price\"\n//                                     value={productData.price}\n//                                     onChange={handleChange}\n//                                     placeholder=\"Enter Price\"\n//                                     isInvalid={isFormValidated && !productData.price}\n//                                     isValid={isFormValidated && productData.price}\n//                                     required\n//                                 />\n//                             </Form.Group>\n//                         </div>\n//                         <div className='m-1'>\n//                             <Form.Group controlId=\"stock\">\n//                                 <Form.Label>Stock</Form.Label>\n//                                 <Form.Control\n//                                     type=\"number\"\n//                                     name=\"stock\"\n//                                     value={productData.stock}\n//                                     onChange={handleChange}\n//                                     placeholder=\"Enter Stock\"\n//                                     isInvalid={isFormValidated && !productData.stock}\n//                                     isValid={isFormValidated && productData.stock}\n//                                     required\n//                                 />\n//                             </Form.Group>\n//                         </div>\n//                     </div>\n//                 </Form>\n//                 <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit} className='mb-1 mt-1'>\n//                     Submit\n//                 </Button>\n//             </div>\n//         </div>\n//     )\n//  } \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GridPackaging = () => {\n  _s();\n  const [search, setSearch] = useState('');\n  const [rowDataPVendor, setrowDataPVendor] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const [colData, setColData] = useState([{\n    headerName: 'Product Tag',\n    field: 'product_tag',\n    width: 150\n  }, {\n    headerName: 'Cost of Packaging Fee',\n    field: 'cost_of_packaging',\n    editable: true,\n    width: 200\n  }]);\n  useEffect(() => {\n    const fetchPVendor = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8000/packagingvendor`);\n        console.log(response.data);\n        setrowDataPVendor(response.data);\n      } catch (error) {\n        console.log('fetchSingular threw an error, ', error);\n      }\n    };\n    fetchPVendor();\n  }, []);\n  window.rr = rowDataPVendor;\n  window.packagin = rowDataPVendor;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ag-theme-quartz-dark\",\n      style: {\n        height: 300,\n        width: 400\n      },\n      children: [/*#__PURE__*/_jsxDEV(AgGridReact, {\n        columnDefs: colData,\n        defaultColDef: {\n          flex: 1\n        },\n        rowDataPVendor: rowData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" mt-4 ag-theme-quartz-dark\",\n        style: {\n          height: 800,\n          width: 600\n        },\n        children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n          columnDefs: colData2,\n          defaultColDef: {\n            flex: 1\n          },\n          rowData: rowData2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n};\n_s(GridPackaging, \"HUtUeXW2xUwLZJ9guc1lDAxmmew=\");\n_c = GridPackaging;\nexport default GridPackaging;\nvar _c;\n$RefreshReg$(_c, \"GridPackaging\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","axios","AgGridReact","Form","getData","SearchBar","jsxDEV","_jsxDEV","GridPackaging","_s","search","setSearch","rowDataPVendor","setrowDataPVendor","showForm","setShowForm","colData","setColData","headerName","field","width","editable","fetchPVendor","response","get","console","log","data","error","window","rr","packagin","children","className","style","height","columnDefs","defaultColDef","flex","rowData","fileName","_jsxFileName","lineNumber","columnNumber","colData2","rowData2","_c","$RefreshReg$"],"sources":["/Users/trtp/working/milo/final_pricecalc_master/frontend/src/components/PackagingView.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react'\nimport axios from 'axios'\nimport { AgGridReact } from 'ag-grid-react'\nimport 'ag-grid-community/styles/ag-grid.css'\nimport 'ag-grid-community/styles/ag-theme-quartz.css'\nimport '../AppGrid.css';\nimport Form from 'react-bootstrap/Form';\n\nimport { getData } from './CskuForm';\nimport { SearchBar } from './SearchBar';\n\n// const PackagingForm = ({ updatePackaging, rowData, onClose }) => {\n//     return (\n//         <div>\n//             <div className='d-flex flex-row flex-start justify-content-between' onKeyDown={handleKeyPress} style={{ marginLeft: 42, marginRight: 42, marginTop: 24}}>\n//                 <Form onSubmit={handleSubmit}>\n//                     <div className=\"d-flex flex-row justify-content-between\" style={{ width: '100%' }}>\n//                         <div className=\"m-1\">\n//                             <Form.Label>Product ID</Form.Label>\n//                             <Form.Group controlId=\"product_id\">\n//                                 <Form.Control\n//                                     type=\"text\"\n//                                     name=\"product_id\"\n//                                     value={productData.product_id}\n//                                     onChange={handleChange}\n//                                     placeholder=\"Enter Product ID\"\n//                                     isInvalid={isFormValidated && !productData.product_id}\n//                                     isValid={isFormValidated && productData.product_id}\n//                                     style={{ backgroundColor: isValidName ? 'white' : 'rgba(225, 0, 0, 0.6)' }}\n//                                     required\n//                                 />\n//                             </Form.Group>\n//                         </div>\n//                         <div className=\"m-1\">\n//                             <Form.Group controlId=\"manufacturer\">\n//                                 <Form.Label>Manufacturer</Form.Label>\n//                                 <Form.Control\n//                                     type=\"text\"\n//                                     name=\"manufacturer\"\n//                                     value={productData.manufacturer}\n//                                     onChange={handleChange}\n//                                     placeholder=\"Enter Manufacturer\"\n//                                     isInvalid={isFormValidated && !productData.manufacturer}\n//                                     isValid={isFormValidated && productData.manufacturer}\n//                                     required\n//                                 />\n//                             </Form.Group>\n//                         </div>\n//                         <div className='m-1'>\n//                             <Form.Group controlId=\"price\">\n//                                 <Form.Label>Price</Form.Label>\n//                                 <Form.Control\n//                                     type=\"number\"\n//                                     name=\"price\"\n//                                     value={productData.price}\n//                                     onChange={handleChange}\n//                                     placeholder=\"Enter Price\"\n//                                     isInvalid={isFormValidated && !productData.price}\n//                                     isValid={isFormValidated && productData.price}\n//                                     required\n//                                 />\n//                             </Form.Group>\n//                         </div>\n//                         <div className='m-1'>\n//                             <Form.Group controlId=\"stock\">\n//                                 <Form.Label>Stock</Form.Label>\n//                                 <Form.Control\n//                                     type=\"number\"\n//                                     name=\"stock\"\n//                                     value={productData.stock}\n//                                     onChange={handleChange}\n//                                     placeholder=\"Enter Stock\"\n//                                     isInvalid={isFormValidated && !productData.stock}\n//                                     isValid={isFormValidated && productData.stock}\n//                                     required\n//                                 />\n//                             </Form.Group>\n//                         </div>\n//                     </div>\n//                 </Form>\n//                 <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit} className='mb-1 mt-1'>\n//                     Submit\n//                 </Button>\n//             </div>\n//         </div>\n//     )\n//  } \n\n\n\n\nconst GridPackaging = () => {\n    const [search, setSearch] = useState('');\n    const [rowDataPVendor, setrowDataPVendor] = useState([])\n    const [showForm, setShowForm] = useState(false);\n    const [colData, setColData] = useState(\n        [\n            { headerName: 'Product Tag', field: 'product_tag', width: 150 },\n            { headerName: 'Cost of Packaging Fee', field: 'cost_of_packaging', editable: true, width: 200 },\n        ]\n    )\n\n    useEffect(() => {\n        const fetchPVendor = async () => {\n            try {\n                const response = await axios.get(`http://localhost:8000/packagingvendor`)\n                console.log(response.data)\n                setrowDataPVendor(response.data)\n            }\n            catch (error) {\n                console.log('fetchSingular threw an error, ', error);\n            }\n        }\n        fetchPVendor()\n    }, []);\n    window.rr = rowDataPVendor\n\n\n    window.packagin = rowDataPVendor;\n\n    return (\n        <div>\n            <div className=\"ag-theme-quartz-dark\" style={{ height: 300, width: 400 }}>\n                {/* <SearchBar title='Packaging' titlecount={rowDataPVendor.length} search={search} setSearch={setSearch} /> */}\n\n                <AgGridReact\n                    columnDefs={colData}\n                    defaultColDef={{ flex: 1 }}\n\n                    rowDataPVendor={rowData}>\n                </AgGridReact>\n\n                <div className=\" mt-4 ag-theme-quartz-dark\" style={{ height: 800, width: 600 }}>\n\n                    <AgGridReact\n                        columnDefs={colData2}\n                        defaultColDef={{ flex: 1 }}\n                        rowData={rowData2}>\n                    </AgGridReact>\n                </div>\n            </div>\n\n        </div>\n    )\n\n}\n\nexport default GridPackaging;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}