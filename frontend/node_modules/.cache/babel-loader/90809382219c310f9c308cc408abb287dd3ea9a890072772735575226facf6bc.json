{"ast":null,"code":"var _jsxFileName = \"/Users/trtp/working/milo/final_pricecalc_master/frontend/src/components/SkuForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport Alert from '@mui/material/Alert';\nimport axios from 'axios';\nimport { Form, Dropdown, Button, ButtonGroup, Col } from 'react-bootstrap';\nimport PskuForm from './PskuForm';\nimport { getData, vendorData, setVendorData, mySku, generatePId, pskuData, setPskuData, useSkuForm } from './CskuForm';\nimport SkuLink from './SkuLink';\nimport MyModal from './MyModal';\nimport { NavPskuBar } from './PskuView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SkuForm = ({\n  addSku,\n  rowData\n}) => {\n  _s();\n  const [showPskuBar, setShowPskuBar] = useState(false);\n  const [pskuDes, setPskuDes] = useState('');\n  const sku_names = rowData.map(row => row.name_id);\n  const {\n    pskuData,\n    setPskuData\n  } = useSkuForm();\n  const [formData, setFormData] = useState(mySku);\n  const [formDataArray, setFormDataArray] = useState([]);\n  const [nextIndex, setNextIndex] = useState(0);\n  const [skuLink, setSkuLink] = useState([]);\n  const [passVendor, setPassVendor] = useState(null); //used as localstate for now\n  const [pskuId, setPskuId] = useState(generatePId());\n  const [vendorData, setVendorData] = useState([]);\n  const [productTag, setProductTag] = useState([]);\n  const [isLoadingVendors, setIsLoadingVendors] = useState(false);\n  const [selectedProductTag, setSelectedProductTag] = useState(null);\n  const [isFormValidated, setIsFormValidated] = useState(false);\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n  const [showSkuMessage, setShowSkuMessage] = useState(false);\n  const [showPskuMessage, setShowPskuMessage] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(''); //todo\n\n  const [isValidPskuName, setIsValidPskuName] = useState(false);\n  const [isValidName, setIsValidName] = useState(true);\n  const [showModal, setShowModal] = useState(false);\n  const [selectedNames, setSelectedNames] = useState([]);\n  const [pskuPost, setPskuPost] = useState([]);\n  const [pskuNames, setPskuNames] = useState([]);\n  const [missingFields, setMissingFields] = useState([]);\n  {\n    missingFields.length > 0 && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: [\"Please fill out the following fields: \", missingFields.join(', ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n  const setCskuClick = () => {\n    createNewFormEntry();\n  };\n  const setPskuClick = () => {\n    if (showPskuBar) {\n      setSelectedProductTag(null);\n      setSelectedNames([]);\n      setFormDataArray([]);\n    }\n    if (!showPskuBar) {\n      let descriptions = [];\n      if (formData.description) {\n        descriptions.push(formData.description);\n      }\n      if (formDataArray) {\n        formDataArray.forEach(item => {\n          if (item.description) {\n            descriptions.push(item.description);\n          }\n        });\n      }\n      setPskuDes(descriptions.join(' '));\n      if (formData.name_id && formDataArray.length == 0) setPskuId(formData.name_id);\n    }\n    setShowPskuBar(!showPskuBar);\n  };\n  useEffect(() => {\n    if (pskuData) {\n      setPskuNames(pskuData.map(item => item.name_id));\n    }\n  }, [pskuData]);\n  window.dd = pskuNames;\n  const createNewFormEntry = () => {\n    const newEntry = {\n      ...mySku,\n      vendor_id: localStorage.getItem('lastSelectedVendor'),\n      index: nextIndex\n    };\n    // window.scrollBy(0, 40)\n    setFormDataArray(prevArray => [...prevArray, newEntry]);\n  };\n  const onRemoveMap = indexToRemove => {\n    setFormDataArray(prevArray => {\n      const newArray = [...prevArray];\n      newArray.splice(indexToRemove, 1);\n      return newArray;\n    });\n  };\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n  const handleSkuSelect = newSelectedNames => {\n    setSelectedNames(newSelectedNames);\n  };\n  const handleAddLinks = () => {\n    setShowModal(true);\n  };\n  const handleRemoveLink = nameToRemove => {\n    setSelectedNames(selectedNames.filter(name => name !== nameToRemove));\n  };\n  const handleProductTagSelect = tag => {\n    setSelectedProductTag(tag);\n  };\n\n  //USE EFFECTS\n  useEffect(() => {\n    setNextIndex(formDataArray.length);\n  }, [formDataArray]);\n  useEffect(() => {\n    const initialVendorId = localStorage.getItem('lastSelectedVendor');\n    setPassVendor(initialVendorId);\n  }, [localStorage.getItem('lastSelectedVendor')]); //not using atm.... \n\n  useEffect(() => {\n    if (!isLoadingVendors && vendorData.length > 0) {\n      setFormData(prevFormData => ({\n        ...prevFormData,\n        vendor_id: prevFormData.vendor_id || vendorData[0].name_id\n      }));\n    }\n  }, [isLoadingVendors, vendorData]);\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoadingVendors(true);\n      try {\n        const [vendors, tags] = await Promise.all([getData('vendor', 'value'), getData('producttag', 'key')]);\n        setVendorData(vendors);\n        setProductTag(tags);\n      } catch (error) {\n        console.error('Error fetching vendors or product tags', error);\n      } finally {\n        setIsLoadingVendors(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  //HANDLERS\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n    if (name === 'vendor_id') {\n      localStorage.setItem('lastSelectedVendor', value);\n      formData.vendor_id = value;\n    }\n    if (name === 'name_id' && formData.name_id.length > 0) value && sku_names.map(name => name.toLowerCase()).includes(value.toLowerCase()) ? setIsValidName(false) : setIsValidName(true);\n  };\n  const doPsku = () => {\n    let skuNames = [];\n    skuNames.push(formData.name_id);\n    if (formDataArray.length > 0) for (let i = 0; i < formDataArray.length; i++) skuNames.push(formDataArray[i].name_id);\n    if (selectedNames.length > 0) for (let i = 0; i < selectedNames.length; i++) skuNames.push(selectedNames[i]);\n    const psku = [{\n      skus: skuNames,\n      product_tag: selectedProductTag,\n      description: pskuDes,\n      name_id: pskuId\n    }];\n    return apiDoPsku(psku);\n  };\n  const apiDoPsku = async pskuPost => {\n    console.log('here we are: ', pskuPost[0]);\n    try {\n      const response = await axios.post('http://localhost:8000/psku', pskuPost[0]);\n      console.log('good doo api success');\n      return true;\n    } catch (error) {\n      console.error('There was a POST-PSKU error!', error);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (formData.name_id.length == 0 && !showPskuBar) {\n      setShowSkuMessage(true);\n      setTimeout(() => {\n        setShowSkuMessage(false);\n      }, 3000);\n      return;\n    }\n    if ((!pskuDes || !pskuId || !selectedProductTag) && showPskuBar) {\n      return;\n    }\n    formData.vendor_id = localStorage.getItem('lastSelectedVendor');\n    if (!selectedNames || !showPskuBar) {\n      console.log('hi');\n      const newMissingFields = Object.keys(formData).filter(key => !formData[key]);\n      setMissingFields(newMissingFields);\n      if (newMissingFields.length > 0) {\n        setMissingFields(newMissingFields);\n        setIsFormValidated(true);\n        return;\n      }\n    }\n    if (!formData.first_mile || formData.first_mile < 0) formData.first_mile = 0;\n    try {\n      const do_response = async form => {\n        try {\n          console.log('printing. . . . ');\n          console.log(form);\n          const response = await axios.post('http://localhost:8000/sku', form);\n          if (addSku) addSku(response.data);\n        } catch (error) {\n          console.error('There was a POST2 error!', error);\n        }\n      };\n      if (formData.name_id) do_response(formData);\n      for (let i = 0; i < formDataArray.length; i++) do_response(formDataArray[i]);\n      if (selectedProductTag) doPsku();\n      setShowSuccessMessage(true);\n      setTimeout(() => {\n        setShowSuccessMessage(false);\n      }, 3000);\n      setFormData({\n        vendor_id: '',\n        name_id: '',\n        description: '',\n        cogs: '',\n        first_mile: '',\n        weight_kg: ''\n      });\n      setShowPskuBar(false);\n      setPskuDes('');\n      setPskuId(generatePId());\n      setIsFormValidated(false);\n      setSelectedProductTag(false);\n      setSelectedNames([]);\n      setFormDataArray([]);\n      setPskuPost([]);\n      isValidName(true);\n    } catch (error) {\n      console.error('There was a POST error!', error);\n    }\n  };\n  window.p = formData;\n  window.product = selectedProductTag;\n  window.pp = formDataArray;\n  window.pt = selectedProductTag;\n  window.post = pskuPost;\n  window.d = pskuDes;\n  const setBtnDefault = () => {\n    setSelectedProductTag(null);\n    setPskuPost([]);\n    setSkuLink([]);\n    setSelectedNames([]);\n    setFormDataArray([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-1\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-son\",\n      children: showPskuBar && /*#__PURE__*/_jsxDEV(NavPskuBar, {\n        setPT: setSelectedProductTag,\n        productTag: productTag,\n        AddSkuBtn: createNewFormEntry,\n        LinkSkuBtn: handleAddLinks,\n        pskuId: pskuId,\n        setPskuId: setPskuId,\n        pDes: pskuDes,\n        setPDes: setPskuDes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 border rounded-top border-secondary p-2 form-font\",\n      children: [showSuccessMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success mt-2\",\n        role: \"alert\",\n        children: \"SKUS has been added successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 21\n      }, this), showPskuMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success mt-2\",\n        role: \"alert\",\n        children: \"Parent SKU has been added successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 21\n      }, this), showSkuMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-warning mt-2\",\n        role: \"alert\",\n        children: \"Child Sku ID must be unique.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row g-2\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 1,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"name_id\",\n              style: {\n                textAlign: 'left'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"SKU ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"name_id\",\n                value: formData.name_id,\n                onChange: handleChange,\n                placeholder: \"NEW ID\",\n                isInvalid: isFormValidated && !formData.name_id && !isValidName,\n                isValid: isFormValidated && formData.name_id && isValidName,\n                style: {\n                  backgroundColor: isValidName ? 'white' : 'rgba(225, 0, 0, 0.6)'\n                },\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 2,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"vendor_id\",\n              style: {\n                textAlign: 'left'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                className: \"form-label\",\n                children: \"Vendor's ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 33\n              }, this), isLoadingVendors ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"No vendors to show ...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(Form.Select, {\n                name: \"vendor_id\",\n                value: isLoadingVendors ? '' : localStorage.getItem('lastSelectedVendor') || vendorData[0] && vendorData[0].name_id || 'NO vendors available!',\n                onChange: handleChange,\n                isInvalid: isFormValidated && !formData.vendor_id,\n                isValid: isFormValidated && formData.vendor_id,\n                required: true,\n                children: vendorData.map(vendor => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: vendor.name_id,\n                  children: vendor.name_id\n                }, vendor.name_id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 2,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"form-group is-valid\",\n              controlId: \"description\",\n              style: {\n                textAlign: 'left'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"description\",\n                value: formData.description,\n                onChange: handleChange,\n                placeholder: \"Description\",\n                isInvalid: isFormValidated && !formData.description,\n                required: true,\n                isValid: isFormValidated && formData.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 2,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"cogs\",\n              style: {\n                textAlign: 'left'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"COGS\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                name: \"cogs\",\n                value: formData.cogs,\n                onChange: handleChange,\n                placeholder: \"COGS\",\n                isInvalid: isFormValidated && !formData.cogs,\n                isValid: isFormValidated && formData.cogs,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 1,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"first_mile\",\n              style: {\n                textAlign: 'left'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"First Mile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                name: \"first_mile\",\n                value: formData.first_mile,\n                onChange: handleChange,\n                placeholder: \"\\u20AC\",\n                isInvalid: isFormValidated && !formData.first_mile,\n                isValid: isFormValidated && formData.first_mile,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 1,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"weight\",\n              style: {\n                textAlign: 'left'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Weight\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                name: \"weight_kg\",\n                value: formData.weight_kg,\n                onChange: handleChange,\n                isInvalid: isFormValidated && !formData.weight_kg // Apply 'is-invalid' class\n                ,\n                isValid: isFormValidated && formData.weight_kg // Apply 'is-invalid' class\n                ,\n                placeholder: \"KG\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 1,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"dark\",\n              className: \"hover-orange\",\n              onClick: setCskuClick,\n              children: \"Add CSKU\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 1,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: showPskuBar ? 'primary' : 'dark',\n              className: !showPskuBar ? 'hover-orange' : 'hov-blue',\n              type: \"submit\",\n              onClick: event => {\n                event.preventDefault();\n                setPskuClick();\n              },\n              children: \" Set PSKU\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 1,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"light\",\n              type: \"submit\",\n              onClick: handleSubmit,\n              className: \"hover-orange\",\n              style: {\n                paddingLeft: 6\n              },\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 25\n          }, this), nextIndex >= 0 && formDataArray.map((formData, index) => /*#__PURE__*/_jsxDEV(PskuForm, {\n            pskuData: formData,\n            setPskuData: setFormDataArray,\n            index: index,\n            onRemove: onRemoveMap\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 33\n          }, this)), selectedNames.map((name, index) => /*#__PURE__*/_jsxDEV(SkuLink, {\n            name: name,\n            onClick: () => {\n              handleRemoveLink(name);\n            }\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n        isOpen: showModal,\n        skuNames: sku_names,\n        selectedNames: selectedNames,\n        onClose: handleCloseModal,\n        onSelectSku: handleSkuSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 323,\n    columnNumber: 9\n  }, this);\n};\n\n/*\n{selectedProductTag ?\n    <ButtonGroup vertical>\n        <Form.Control type='text' value={pskuId} onChange={handlePskuIdChange} className='mt-1 btn btn-secondary'\n                style={{ backgroundColor: isValidPskuName ? 'transparent' : 'rgba(225, 0, 0, 0.6)' }}\n        />\n        <Button variant={selectedProductTag ? 'primary' : 'success'} type=\"submit\" onClick={handleSubmit} className='mt-1 d-flex justify-content-center align-items-center hover-orange-dark' style={{ height: 30 }}>\n            <i className=\"bi bi-airplane-engines\" style={{ fontSize: 24 }}></i>\n        </Button>\n    </ButtonGroup>\n    :\n}\n\n\n\n                 {selectedProductTag && (\n   \n                    )}\n\n\n    {selectedProductTag && (\n                            <Col md={1}>\n                                <div className=\"text-end\">\n                                    <Button\n                                        className='mt-1 bg-secondary hover-border-blue'\n                                        style={{ width: '80px', height: 35, border: 'none' }}\n                                        onClick={createNewFormEntry}\n                                    >\n                                        <p>Add</p>\n                                    </Button>\n                                    <Button className='mt-1 bg-secondary hover-border-blue' style={{ width: '80px', height: 35, 'border': 'none' }}\n                                        onClick={handleAddLinks}>\n                                        <p>Link</p>\n                                    </Button>\n                                </div>\n\n                            </Col>\n                        )}\n\n\n\n\n<Col md={1}>\n<div className=\"text-end\">\n    <Button\n        className='mt-1 bg-secondary hover-border-blue'\n        style={{ width: '80px', height: 35, border: 'none' }}\n        onClick={createNewFormEntry}\n    >\n        <p>Add</p>\n    </Button>\n    <Button className='mt-1 bg-secondary hover-border-blue' style={{ width: '80px', height: 35, 'border': 'none' }}\n        onClick={handleAddLinks}>\n        <p>Link</p>\n    </Button>\n</div>\n\n</Col>\n\n\n\n</Col>\n<Col md={1}>\n<ButtonGroup vertical>\n    <Form.Control type='text' value={submitId} onChange={handlePskuIdChange} className='mt-1 btn btn-secondary'\n        style={{ backgroundColor: submitId ? 'transparent' : 'rgba(225, 0, 0, 0.6)', height: 32 }}\n    />\n\n</ButtonGroup>\n\n*/\n_s(SkuForm, \"pNO+h+/9Y+ZiaF/VHimSOSB4iFE=\", false, function () {\n  return [useSkuForm];\n});\n_c = SkuForm;\nvar _c;\n$RefreshReg$(_c, \"SkuForm\");","map":{"version":3,"names":["React","useEffect","useState","Modal","Alert","axios","Form","Dropdown","Button","ButtonGroup","Col","PskuForm","getData","vendorData","setVendorData","mySku","generatePId","pskuData","setPskuData","useSkuForm","SkuLink","MyModal","NavPskuBar","jsxDEV","_jsxDEV","SkuForm","addSku","rowData","_s","showPskuBar","setShowPskuBar","pskuDes","setPskuDes","sku_names","map","row","name_id","formData","setFormData","formDataArray","setFormDataArray","nextIndex","setNextIndex","skuLink","setSkuLink","passVendor","setPassVendor","pskuId","setPskuId","productTag","setProductTag","isLoadingVendors","setIsLoadingVendors","selectedProductTag","setSelectedProductTag","isFormValidated","setIsFormValidated","showSuccessMessage","setShowSuccessMessage","showSkuMessage","setShowSkuMessage","showPskuMessage","setShowPskuMessage","successMessage","setSuccessMessage","isValidPskuName","setIsValidPskuName","isValidName","setIsValidName","showModal","setShowModal","selectedNames","setSelectedNames","pskuPost","setPskuPost","pskuNames","setPskuNames","missingFields","setMissingFields","length","variant","children","join","fileName","_jsxFileName","lineNumber","columnNumber","setCskuClick","createNewFormEntry","setPskuClick","descriptions","description","push","forEach","item","window","dd","newEntry","vendor_id","localStorage","getItem","index","prevArray","onRemoveMap","indexToRemove","newArray","splice","handleCloseModal","handleSkuSelect","newSelectedNames","handleAddLinks","handleRemoveLink","nameToRemove","filter","name","handleProductTagSelect","tag","initialVendorId","prevFormData","fetchData","vendors","tags","Promise","all","error","console","handleChange","e","value","target","prevData","setItem","toLowerCase","includes","doPsku","skuNames","i","psku","skus","product_tag","apiDoPsku","log","response","post","handleSubmit","preventDefault","setTimeout","newMissingFields","Object","keys","key","first_mile","do_response","form","data","cogs","weight_kg","p","product","pp","pt","d","setBtnDefault","className","setPT","AddSkuBtn","LinkSkuBtn","pDes","setPDes","role","onSubmit","md","Group","controlId","style","textAlign","Label","Control","type","onChange","placeholder","isInvalid","isValid","backgroundColor","required","Select","vendor","onClick","event","paddingLeft","onRemove","isOpen","onClose","onSelectSku","_c","$RefreshReg$"],"sources":["/Users/trtp/working/milo/final_pricecalc_master/frontend/src/components/SkuForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport Alert from '@mui/material/Alert';\n\nimport axios from 'axios';\nimport { Form, Dropdown, Button, ButtonGroup, Col } from 'react-bootstrap';\nimport PskuForm from './PskuForm';\nimport { getData, vendorData, setVendorData, mySku, generatePId, pskuData, setPskuData, useSkuForm } from './CskuForm';\nimport SkuLink from './SkuLink';\nimport MyModal from './MyModal';\nimport { NavPskuBar } from './PskuView';\n\nexport const SkuForm = ({ addSku, rowData }) => {\n\n    const [showPskuBar, setShowPskuBar] = useState(false);\n    const [pskuDes, setPskuDes] = useState('')\n    const sku_names = rowData.map(row => row.name_id);\n    const { pskuData, setPskuData } = useSkuForm();\n    const [formData, setFormData] = useState(mySku);\n    const [formDataArray, setFormDataArray] = useState([]);\n    const [nextIndex, setNextIndex] = useState(0);\n\n    const [skuLink, setSkuLink] = useState([]);\n    const [passVendor, setPassVendor] = useState(null); //used as localstate for now\n    const [pskuId, setPskuId] = useState(generatePId())\n\n    const [vendorData, setVendorData] = useState([])\n    const [productTag, setProductTag] = useState([])\n    const [isLoadingVendors, setIsLoadingVendors] = useState(false);\n    const [selectedProductTag, setSelectedProductTag] = useState(null);\n\n    const [isFormValidated, setIsFormValidated] = useState(false);\n    const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n    const [showSkuMessage, setShowSkuMessage] = useState(false);\n    const [showPskuMessage, setShowPskuMessage] = useState(false);\n    const [successMessage, setSuccessMessage] = useState(''); //todo\n\n    const [isValidPskuName, setIsValidPskuName] = useState(false);\n    const [isValidName, setIsValidName] = useState(true);\n    const [showModal, setShowModal] = useState(false);\n    const [selectedNames, setSelectedNames] = useState([]);\n\n    const [pskuPost, setPskuPost] = useState([]);\n    const [pskuNames, setPskuNames] = useState([]);\n\n    const [missingFields, setMissingFields] = useState([]);\n    {\n        missingFields.length > 0 && (\n            <Alert variant=\"danger\">\n                Please fill out the following fields: {missingFields.join(', ')}\n            </Alert>\n        )\n    }\n\n    const setCskuClick = () => {\n        createNewFormEntry();\n    }\n\n    \n    const setPskuClick = () => {\n        if (showPskuBar) {\n            setSelectedProductTag(null);\n            setSelectedNames([])\n            setFormDataArray([])\n        }\n\n        if (!showPskuBar) {\n            let descriptions = [];\n\n            if (formData.description) {\n                descriptions.push(formData.description);\n            }\n\n            if (formDataArray) {\n                formDataArray.forEach(item => {\n                    if (item.description) {\n                        descriptions.push(item.description);\n                    }\n                });\n            }\n            setPskuDes(descriptions.join(' '));\n\n            if (formData.name_id && formDataArray.length == 0)\n                setPskuId(formData.name_id)\n        }\n        setShowPskuBar(!showPskuBar);\n    }\n\n\n    useEffect(() => {\n        if (pskuData) {\n            setPskuNames(pskuData.map(item => item.name_id));\n        }\n    }, [pskuData]);\n    window.dd = pskuNames;\n\n\n    const createNewFormEntry = () => {\n        const newEntry = {\n            ...mySku,\n            vendor_id: localStorage.getItem('lastSelectedVendor'),\n            index: nextIndex\n        };\n        // window.scrollBy(0, 40)\n        setFormDataArray(prevArray => [...prevArray, newEntry]);\n    };\n\n    const onRemoveMap = (indexToRemove) => {\n        setFormDataArray(prevArray => {\n            const newArray = [...prevArray];\n            newArray.splice(indexToRemove, 1);\n            return newArray;\n        });\n    }\n    const handleCloseModal = () => {\n        setShowModal(false);\n    }\n    const handleSkuSelect = (newSelectedNames) => {\n        setSelectedNames(newSelectedNames);\n    }\n    const handleAddLinks = () => {\n        setShowModal(true);\n    };\n    const handleRemoveLink = (nameToRemove) => {\n        setSelectedNames(selectedNames.filter(name => name !== nameToRemove));\n    };\n    const handleProductTagSelect = (tag) => {\n        setSelectedProductTag(tag);\n    }\n\n    //USE EFFECTS\n    useEffect(() => {\n        setNextIndex(formDataArray.length);\n    }, [formDataArray]);\n\n    useEffect(() => {\n        const initialVendorId = localStorage.getItem('lastSelectedVendor');\n        setPassVendor(initialVendorId);\n    }, [localStorage.getItem('lastSelectedVendor')]); //not using atm.... \n\n\n    useEffect(() => {\n        if (!isLoadingVendors && vendorData.length > 0) {\n            setFormData(prevFormData => ({\n                ...prevFormData,\n                vendor_id: prevFormData.vendor_id || vendorData[0].name_id,\n            }));\n        }\n    }, [isLoadingVendors, vendorData]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            setIsLoadingVendors(true);\n            try {\n                const [vendors, tags] = await Promise.all([\n                    getData('vendor', 'value'),\n                    getData('producttag', 'key')\n                ]);\n                setVendorData(vendors);\n                setProductTag(tags);\n            } catch (error) {\n                console.error('Error fetching vendors or product tags', error);\n            } finally {\n                setIsLoadingVendors(false);\n            }\n        };\n        fetchData();\n    }, []);\n\n\n    //HANDLERS\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData((prevData) => ({\n            ...prevData,\n            [name]: value,\n        }));\n        if (name === 'vendor_id') {\n            localStorage.setItem('lastSelectedVendor', value);\n            formData.vendor_id = value;\n        }\n        if (name === 'name_id' && formData.name_id.length > 0)\n            (value && sku_names.map(name => name.toLowerCase()).includes(value.toLowerCase())) ? setIsValidName(false) : setIsValidName(true);\n    };\n\n    const doPsku = () => {\n        let skuNames = [];\n\n        skuNames.push(formData.name_id);\n        if (formDataArray.length > 0)\n            for (let i = 0; i < formDataArray.length; i++)\n                skuNames.push(formDataArray[i].name_id);\n\n        if (selectedNames.length > 0)\n            for (let i = 0; i < selectedNames.length; i++)\n                skuNames.push(selectedNames[i]);\n\n        const psku = [\n            {\n                skus: skuNames,\n                product_tag: selectedProductTag,\n                description: pskuDes,\n                name_id: pskuId\n            }\n        ];\n        return apiDoPsku(psku)\n    }\n\n    const apiDoPsku = async (pskuPost) => {\n        console.log('here we are: ', pskuPost[0])\n        try {\n            const response = await axios.post('http://localhost:8000/psku', pskuPost[0]);\n            console.log('good doo api success')\n            return true\n\n        } catch (error) {\n            console.error('There was a POST-PSKU error!', error);\n        }\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if ((formData.name_id.length == 0) && (!showPskuBar)) {\n            setShowSkuMessage(true);\n            setTimeout(() => {\n                setShowSkuMessage(false);\n            }, 3000);\n            return\n        }\n\n        if ((!pskuDes || !pskuId || !selectedProductTag) && showPskuBar)\n        {\n            return\n        }   \n\n        formData.vendor_id = localStorage.getItem('lastSelectedVendor');\n\n        if (!selectedNames || !showPskuBar)\n        {\n            console.log('hi')\n            const newMissingFields = Object.keys(formData).filter(key => !formData[key]);\n            setMissingFields(newMissingFields);\n    \n            if (newMissingFields.length > 0) {\n                setMissingFields(newMissingFields);\n                setIsFormValidated(true)\n                return;\n            }\n\n        }\n\n        if (!formData.first_mile || formData.first_mile < 0)\n            formData.first_mile = 0;\n\n        try {\n            const do_response = async (form) => {\n                try{\n                    console.log('printing. . . . ')\n                    console.log(form)\n                    const response = await axios.post('http://localhost:8000/sku', form);\n                    if (addSku)\n                        addSku(response.data);\n                }\n                catch (error) {\n                    console.error('There was a POST2 error!', error);\n                }\n            }\n            if (formData.name_id)\n                do_response(formData);\n            for (let i = 0; i < formDataArray.length; i++)\n                do_response(formDataArray[i]);\n\n            if (selectedProductTag)\n                doPsku()\n            \n            setShowSuccessMessage(true);\n            setTimeout(() => {\n                setShowSuccessMessage(false);\n            }, 3000);\n            \n            setFormData({\n                vendor_id: '',\n                name_id: '',\n                description: '',\n                cogs: '',\n                first_mile: '',\n                weight_kg: '',\n            });\n            \n            setShowPskuBar(false)\n            setPskuDes('')\n            setPskuId(generatePId())\n            setIsFormValidated(false)\n            setSelectedProductTag(false)\n            setSelectedNames([])\n            setFormDataArray([])\n            setPskuPost([])\n            isValidName(true)\n\n        }\n        catch (error) {\n            console.error('There was a POST error!', error);\n        }\n    };\n\n    window.p = formData;\n    window.product = selectedProductTag;\n    window.pp = formDataArray;\n    window.pt = selectedProductTag\n    window.post = pskuPost;\n    window.d = pskuDes\n\n    const setBtnDefault = () => {\n        setSelectedProductTag(null);\n        setPskuPost([])\n        setSkuLink([])\n        setSelectedNames([])\n        setFormDataArray([])\n    }\n\n    return (\n        <div className='p-1'>\n            <div className='my-son'>\n\n                {showPskuBar && (\n                    <NavPskuBar setPT={setSelectedProductTag} productTag={productTag} AddSkuBtn={createNewFormEntry} LinkSkuBtn={handleAddLinks} pskuId={pskuId} setPskuId={setPskuId} pDes={pskuDes} setPDes={setPskuDes} />\n                )}\n            </div>\n\n            <div className=\"mt-4 border rounded-top border-secondary p-2 form-font\" >\n                {showSuccessMessage && (\n                    <div className=\"alert alert-success mt-2\" role=\"alert\">\n                        SKUS has been added successfully!\n                    </div>\n                )}\n                {showPskuMessage && (\n                    <div className=\"alert alert-success mt-2\" role=\"alert\">\n                        Parent SKU has been added successfully!\n                    </div>\n                )}\n                {showSkuMessage && (\n                    <div className=\"alert alert-warning mt-2\" role=\"alert\">\n                        Child Sku ID must be unique.\n                    </div>\n                )}\n\n\n                <Form onSubmit={handleSubmit}>\n                    <div className=\"row g-2\">\n                        <Col md={1}>\n                            <Form.Group controlId=\"name_id\" style={{ textAlign: 'left' }}>\n                                <Form.Label>SKU ID</Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    name=\"name_id\"\n                                    value={formData.name_id}\n                                    onChange={handleChange}\n                                    placeholder=\"NEW ID\"\n                                    isInvalid={isFormValidated && !formData.name_id && !isValidName}\n                                    isValid={isFormValidated && formData.name_id && isValidName}\n                                    style={{ backgroundColor: isValidName ? 'white' : 'rgba(225, 0, 0, 0.6)' }}\n                                    required\n                                />\n                            </Form.Group>\n                        </Col>\n                        <Col md={2}>\n                            <Form.Group controlId=\"vendor_id\" style={{ textAlign: 'left' }}>\n                                <Form.Label className=\"form-label\">Vendor's ID</Form.Label>\n                                {isLoadingVendors ? (\n                                    <div>No vendors to show ...</div>\n                                ) : (\n                                    <Form.Select\n                                        name=\"vendor_id\"\n                                        value={isLoadingVendors ? '' : (localStorage.getItem('lastSelectedVendor') || (vendorData[0] && vendorData[0].name_id) || 'NO vendors available!')}\n                                        onChange={handleChange}\n                                        isInvalid={isFormValidated && !formData.vendor_id}\n                                        isValid={isFormValidated && formData.vendor_id}\n                                        required\n                                    >\n                                        {vendorData.map((vendor) => (\n                                            <option key={vendor.name_id} value={vendor.name_id}>\n                                                {vendor.name_id}\n                                            </option>\n                                        ))}\n                                    </Form.Select>\n                                )}\n                            </Form.Group>\n                        </Col>\n                        <Col md={2}>\n                            <Form.Group className=\"form-group is-valid\" controlId=\"description\" style={{ textAlign: 'left' }}>\n                                <Form.Label>Description</Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    name=\"description\"\n                                    value={formData.description}\n                                    onChange={handleChange}\n                                    placeholder=\"Description\"\n                                    isInvalid={isFormValidated && !formData.description}\n                                    required\n                                    isValid={isFormValidated && formData.description}\n                                />\n                            </Form.Group>\n                        </Col>\n                        <Col md={2}>\n                            <Form.Group controlId=\"cogs\" style={{ textAlign: 'left' }}>\n                                <Form.Label>COGS</Form.Label>\n                                <Form.Control\n                                    type=\"number\"\n                                    name=\"cogs\"\n                                    value={formData.cogs}\n                                    onChange={handleChange}\n                                    placeholder=\"COGS\"\n                                    isInvalid={isFormValidated && !formData.cogs}\n                                    isValid={isFormValidated && formData.cogs}\n                                    required\n                                />\n                            </Form.Group>\n                        </Col>\n                        <Col md={1}>\n                            <Form.Group controlId=\"first_mile\" style={{ textAlign: 'left' }}>\n                                <Form.Label>First Mile</Form.Label>\n                                <Form.Control\n                                    type=\"number\"\n                                    name=\"first_mile\"\n                                    value={formData.first_mile}\n                                    onChange={handleChange}\n                                    placeholder=\"€\"\n                                    isInvalid={isFormValidated && !formData.first_mile}\n                                    isValid={isFormValidated && formData.first_mile}\n                                    required\n                                />\n                            </Form.Group>\n                        </Col>\n                        <Col md={1}>\n                            <Form.Group controlId=\"weight\" style={{ textAlign: 'left' }}>\n                                <Form.Label>Weight</Form.Label>\n                                <Form.Control\n                                    type=\"number\"\n                                    name=\"weight_kg\"\n                                    value={formData.weight_kg}\n                                    onChange={handleChange}\n                                    isInvalid={isFormValidated && !formData.weight_kg} // Apply 'is-invalid' class\n                                    isValid={isFormValidated && formData.weight_kg} // Apply 'is-invalid' class\n                                    placeholder=\"KG\"\n                                    required\n                                />\n                            </Form.Group>\n                        </Col>\n\n                        <Col md={1}>\n\n                            <Button variant='dark' className='hover-orange' onClick={setCskuClick}>\n                                Add CSKU\n                            </Button>\n\n                        </Col>\n                        <Col md={1}>\n\n                            <Button\n                                variant={showPskuBar ? 'primary' : 'dark'}\n                                className={!showPskuBar ? 'hover-orange' : 'hov-blue'}\n                                type=\"submit\"\n                                onClick={(event) => {\n                                    event.preventDefault();\n                                    setPskuClick();\n                                }}\n                            > Set PSKU\n                            </Button>\n                        </Col>\n                        <Col md={1}>\n                            <Button variant='light'  type=\"submit\" onClick={handleSubmit} className='hover-orange' style={{paddingLeft: 6}}>\n                                Submit\n                                {/* <i class=\"bi bi-plus-square-fill\"></i> */}\n                            </Button>\n                        </Col>\n\n                        {nextIndex >= 0 && (\n                            formDataArray.map((formData, index) => (\n                                <PskuForm key={index} pskuData={formData} setPskuData={setFormDataArray} index={index} onRemove={onRemoveMap} />\n                            ))\n                        )}\n\n                        {selectedNames.map((name, index) => (\n                            <SkuLink key={index} name={name} onClick={() => { handleRemoveLink(name); }} />\n                        ))}\n                    </div>\n                </Form >\n\n                <MyModal\n                    isOpen={showModal}\n                    skuNames={sku_names}\n                    selectedNames={selectedNames}\n                    onClose={handleCloseModal}\n                    onSelectSku={handleSkuSelect}\n                />\n            </div >\n        </div>\n\n    );\n};\n\n/*\n{selectedProductTag ?\n    <ButtonGroup vertical>\n        <Form.Control type='text' value={pskuId} onChange={handlePskuIdChange} className='mt-1 btn btn-secondary'\n                style={{ backgroundColor: isValidPskuName ? 'transparent' : 'rgba(225, 0, 0, 0.6)' }}\n        />\n        <Button variant={selectedProductTag ? 'primary' : 'success'} type=\"submit\" onClick={handleSubmit} className='mt-1 d-flex justify-content-center align-items-center hover-orange-dark' style={{ height: 30 }}>\n            <i className=\"bi bi-airplane-engines\" style={{ fontSize: 24 }}></i>\n        </Button>\n    </ButtonGroup>\n    :\n}\n\n\n\n                 {selectedProductTag && (\n   \n                    )}\n\n\n    {selectedProductTag && (\n                            <Col md={1}>\n                                <div className=\"text-end\">\n                                    <Button\n                                        className='mt-1 bg-secondary hover-border-blue'\n                                        style={{ width: '80px', height: 35, border: 'none' }}\n                                        onClick={createNewFormEntry}\n                                    >\n                                        <p>Add</p>\n                                    </Button>\n                                    <Button className='mt-1 bg-secondary hover-border-blue' style={{ width: '80px', height: 35, 'border': 'none' }}\n                                        onClick={handleAddLinks}>\n                                        <p>Link</p>\n                                    </Button>\n                                </div>\n\n                            </Col>\n                        )}\n\n\n\n\n<Col md={1}>\n<div className=\"text-end\">\n    <Button\n        className='mt-1 bg-secondary hover-border-blue'\n        style={{ width: '80px', height: 35, border: 'none' }}\n        onClick={createNewFormEntry}\n    >\n        <p>Add</p>\n    </Button>\n    <Button className='mt-1 bg-secondary hover-border-blue' style={{ width: '80px', height: 35, 'border': 'none' }}\n        onClick={handleAddLinks}>\n        <p>Link</p>\n    </Button>\n</div>\n\n</Col>\n\n\n\n</Col>\n<Col md={1}>\n<ButtonGroup vertical>\n    <Form.Control type='text' value={submitId} onChange={handlePskuIdChange} className='mt-1 btn btn-secondary'\n        style={{ backgroundColor: submitId ? 'transparent' : 'rgba(225, 0, 0, 0.6)', height: 32 }}\n    />\n\n</ButtonGroup>\n\n*/\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}