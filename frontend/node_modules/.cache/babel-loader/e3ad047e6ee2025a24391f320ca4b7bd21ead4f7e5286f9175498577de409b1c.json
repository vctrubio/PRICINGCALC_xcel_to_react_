{"ast":null,"code":"var _jsxFileName = \"/Users/trtp/working/milo/final_pricecalc_master/frontend/src/components/PackagingView.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from 'react';\nimport axios from 'axios';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/styles/ag-grid.css';\nimport 'ag-grid-community/styles/ag-theme-quartz.css';\nimport '../AppGrid.css';\nimport { Form, Button, Col } from 'react-bootstrap';\nimport { useSkuForm } from './CskuForm';\nimport { SearchBar } from './SearchBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GridPackaging = () => {\n  _s();\n  const {\n    vendorData,\n    productTag\n  } = useSkuForm();\n  const [gridApi, setGridApi] = useState(null);\n  const [gridApi2, setGridApi2] = useState(null);\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [selectedRows2, setSelectedRows2] = useState([]);\n  const [rerender, setRerender] = useState(false);\n  const [rerender2, setRerender2] = useState(false);\n  const [rowData, setRowData] = useState([]);\n  const [rowData2, setRowData2] = useState([]);\n  const [colData, setColData] = useState([{\n    headerName: 'Vendor ID',\n    field: 'vendor_id',\n    width: 150,\n    checkboxSelection: true,\n    headerCheckboxSelection: true,\n    headerCheckboxSelectionFilteredOnly: true\n  }, {\n    headerName: 'Product Tag',\n    field: 'product_tag',\n    width: 150\n  }, {\n    headerName: 'Cost of Packaging Fee',\n    field: 'cost_of_packaging',\n    editable: true,\n    width: 200\n  }]);\n  const [colData2, setColData2] = useState([{\n    headerName: 'Product Tag',\n    field: 'product_tag',\n    width: 150,\n    checkboxSelection: true,\n    headerCheckboxSelection: true,\n    headerCheckboxSelectionFilteredOnly: true\n  }, {\n    headerName: 'Cost of Packaging Fee',\n    field: 'cost_of_packaging',\n    editable: true,\n    width: 200\n  }]);\n  window.v = vendorData;\n  window.pt = productTag;\n  const [sendVendorPackaging, setSendVendorPackaging] = useState({\n    vendor_id: '',\n    product_tag: '',\n    cost_of_packaging: ''\n  });\n  const [sendWarehousePackaging, setSendWarehousePackaging] = useState({\n    product_tag: '',\n    cost_of_packaging: ''\n  });\n  useEffect(() => {\n    const fetchPVendor = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8000/packagingvendor`);\n        setRowData(response.data);\n      } catch (error) {\n        console.log('fetchPVendor threw an error, ', error);\n      }\n    };\n    const fetchPWarehouse = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8000/packagingwarehouse`);\n        setRowData2(response.data);\n      } catch (error) {\n        console.log('fetchPWarehouse threw an error, ', error);\n      }\n    };\n    fetchPVendor();\n    fetchPWarehouse();\n  }, []);\n  const handleInputChangeVendor = (fieldName, value) => {\n    setSendVendorPackaging({\n      ...sendVendorPackaging,\n      [fieldName]: value\n    });\n  };\n  const handleInputChangeWarehouse = (fieldName, value) => {\n    setSendWarehousePackaging({\n      ...sendWarehousePackaging,\n      [fieldName]: value\n    });\n  };\n  const handleSubmitVendor = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:8000/packagingvendor', sendVendorPackaging);\n      const fee = parseFloat(sendVendorPackaging.cost_of_packaging);\n      if (response.status !== 202) {\n        setRowData([...rowData, {\n          ...sendVendorPackaging,\n          cost_of_packaging: fee\n        }]);\n      } else {\n        setRowData(rowData.map(item => item.vendor_id === sendVendorPackaging.vendor_id && item.product_tag === sendVendorPackaging.product_tag ? {\n          ...sendVendorPackaging,\n          cost_of_packaging: fee\n        } : item));\n      }\n      setSendVendorPackaging({\n        vendor_id: '',\n        product_tag: '',\n        cost_of_packaging: ''\n      });\n    } catch (error) {\n      alert('Call titorrito');\n    }\n  };\n  const handleSubmitWarehouse = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:8000/packagingwarehouse', sendWarehousePackaging);\n      const fee = parseFloat(sendWarehousePackaging.cost_of_packaging);\n      if (response.status === 202) {\n        console.log('response.status', response.status);\n        setRowData2(rowData2.map(item => item.product_tag === sendWarehousePackaging.product_tag ? {\n          ...sendWarehousePackaging,\n          cost_of_packaging: fee\n        } : item));\n      } else {\n        console.log('response.status2', response.status);\n        setRowData2([...rowData2, {\n          ...sendWarehousePackaging,\n          cost_of_packaging: fee\n        }]);\n      }\n      setSendWarehousePackaging({\n        product_tag: '',\n        cost_of_packaging: ''\n      });\n    } catch (error) {\n      alert('Call titorrito');\n    }\n  };\n  const handleCellValueChangedVendor = async event => {\n    try {\n      for (let key in event.data) {\n        if (event.data[key] === undefined || event.data[key] === null) {\n          console.error(`Error: ${key} is empty`);\n          return; // Exit the function if an empty field is found\n        }\n      }\n      const response = await axios.patch(`http://localhost:8000/packagingvendor/${event.data.vendor_id}/${event.data.product_tag}`, event.data);\n    } catch (error) {\n      console.error('Error updating Vendor Packaging data:', error);\n    }\n  };\n  const handleCellValueChangedWarehouse = async event => {\n    try {\n      for (let key in event.data) {\n        if (event.data[key] === undefined || event.data[key] === null) {\n          console.error(`Error: ${key} is empty`);\n          return; // Exit the function if an empty field is found\n        }\n      }\n      const response = await axios.patch(`http://localhost:8000/packagingwarehouse/${event.data.product_tag}`, event.data);\n    } catch (error) {\n      console.error('Error updating Warehouse Packaging data:', error);\n    }\n  };\n  const onGridReady = params => {\n    setGridApi(params.api);\n  };\n  const onSelectionChanged = param => {\n    setSelectedRows(gridApi.getSelectedRows());\n  };\n  const onRowClicked = event => {\n    event.node.setSelected(!event.node.isSelected());\n  };\n  const onGridReady2 = params => {\n    setGridApi2(params.api);\n  };\n  const onSelectionChanged2 = param => {\n    setSelectedRows2(gridApi.getSelectedRows());\n  };\n  const onRowClicked2 = event => {\n    event.node.setSelected(!event.node.isSelected());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-3 d-flex\",\n    style: {\n      display: 'grid',\n      gridTemplateColumns: '1fr 1fr',\n      gap: '20px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ag-theme-quartz-dark\",\n      style: {\n        height: 700,\n        width: 1270,\n        textAlign: 'left'\n      },\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        title: \"PackagingWarehouse\",\n        titlecount: rowData2.length,\n        search: '',\n        setSearch: '',\n        data: rowData2,\n        setData: rowData2,\n        selectedRows: selectedRows2,\n        setRerender: setRerender2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AgGridReact, {\n        onGridReady: onGridReady2,\n        columnDefs: colData2,\n        defaultColDef: {\n          flex: 1,\n          filter: true,\n          sortable: true,\n          floatingFilter: true\n        },\n        rowData: rowData2,\n        onCellValueChanged: handleCellValueChangedWarehouse,\n        onSelectionChanged: onSelectionChanged2,\n        onRowClicked: onRowClicked2,\n        suppressRowClickSelection: true,\n        animateRows: true,\n        rowSelection: 'multiple'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%',\n          height: '4em',\n          marginTop: '1em',\n          paddingLeft: 5\n        },\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmitWarehouse,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row g-2\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 5,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"product_tag\",\n                style: {\n                  textAlign: 'left'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  className: \"form-label\",\n                  children: \"Product Tag\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                  name: \"product_tag\",\n                  value: sendWarehousePackaging.product_tag,\n                  onChange: e => handleInputChangeWarehouse('product_tag', e.target.value),\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select Product Tag\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 41\n                  }, this), productTag.map(tag => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: tag.id,\n                    children: tag\n                  }, tag.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 45\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 5,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"cost_of_packaging\",\n                style: {\n                  textAlign: 'left'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  className: \"form-label\",\n                  children: \"Packaging\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"number\",\n                  name: \"cost_of_packaging\",\n                  placeholder: \"Fee \\u20AC\",\n                  value: sendWarehousePackaging.cost_of_packaging,\n                  onChange: e => handleInputChangeWarehouse('cost_of_packaging', e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 1,\n              className: \"d-flex align-items-end\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                type: \"submit\",\n                style: {\n                  height: '65px'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-plus-square-fill\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 9\n  }, this);\n};\n_s(GridPackaging, \"YEhjK+myEOmOuwHxI9h9qD23SLo=\", false, function () {\n  return [useSkuForm];\n});\n_c = GridPackaging;\nexport default GridPackaging;\nvar _c;\n$RefreshReg$(_c, \"GridPackaging\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","axios","AgGridReact","Form","Button","Col","useSkuForm","SearchBar","jsxDEV","_jsxDEV","GridPackaging","_s","vendorData","productTag","gridApi","setGridApi","gridApi2","setGridApi2","selectedRows","setSelectedRows","selectedRows2","setSelectedRows2","rerender","setRerender","rerender2","setRerender2","rowData","setRowData","rowData2","setRowData2","colData","setColData","headerName","field","width","checkboxSelection","headerCheckboxSelection","headerCheckboxSelectionFilteredOnly","editable","colData2","setColData2","window","v","pt","sendVendorPackaging","setSendVendorPackaging","vendor_id","product_tag","cost_of_packaging","sendWarehousePackaging","setSendWarehousePackaging","fetchPVendor","response","get","data","error","console","log","fetchPWarehouse","handleInputChangeVendor","fieldName","value","handleInputChangeWarehouse","handleSubmitVendor","e","preventDefault","post","fee","parseFloat","status","map","item","alert","handleSubmitWarehouse","handleCellValueChangedVendor","event","key","undefined","patch","handleCellValueChangedWarehouse","onGridReady","params","api","onSelectionChanged","param","getSelectedRows","onRowClicked","node","setSelected","isSelected","onGridReady2","onSelectionChanged2","onRowClicked2","className","style","display","gridTemplateColumns","gap","children","height","textAlign","title","titlecount","length","search","setSearch","setData","fileName","_jsxFileName","lineNumber","columnNumber","columnDefs","defaultColDef","flex","filter","sortable","floatingFilter","onCellValueChanged","suppressRowClickSelection","animateRows","rowSelection","marginTop","paddingLeft","onSubmit","md","Group","controlId","Label","Select","name","onChange","target","required","tag","id","Control","type","placeholder","variant","_c","$RefreshReg$"],"sources":["/Users/trtp/working/milo/final_pricecalc_master/frontend/src/components/PackagingView.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react'\nimport axios from 'axios'\nimport { AgGridReact } from 'ag-grid-react'\nimport 'ag-grid-community/styles/ag-grid.css'\nimport 'ag-grid-community/styles/ag-theme-quartz.css'\nimport '../AppGrid.css';\nimport { Form, Button, Col } from 'react-bootstrap';\nimport { useSkuForm } from './CskuForm'\nimport { SearchBar } from './SearchBar';\n\n\nconst GridPackaging = () => {\n    const { vendorData, productTag } = useSkuForm();\n    const [gridApi, setGridApi] = useState(null);\n    const [gridApi2, setGridApi2] = useState(null);\n    const [selectedRows, setSelectedRows] = useState([]);\n    const [selectedRows2, setSelectedRows2] = useState([]);\n    const [rerender, setRerender] = useState(false);\n    const [rerender2, setRerender2] = useState(false);\n    const [rowData, setRowData] = useState([])\n    const [rowData2, setRowData2] = useState([])\n    const [colData, setColData] = useState(\n        [\n            {\n                headerName: 'Vendor ID', field: 'vendor_id', width: 150,\n                checkboxSelection: true,\n                headerCheckboxSelection: true,\n                headerCheckboxSelectionFilteredOnly: true\n            },\n            { headerName: 'Product Tag', field: 'product_tag', width: 150 },\n            { headerName: 'Cost of Packaging Fee', field: 'cost_of_packaging', editable: true, width: 200 },\n        ]\n    )\n    const [colData2, setColData2] = useState(\n        [\n            {\n                headerName: 'Product Tag', field: 'product_tag', width: 150,\n                checkboxSelection: true,\n                headerCheckboxSelection: true,\n                headerCheckboxSelectionFilteredOnly: true\n            },\n            { headerName: 'Cost of Packaging Fee', field: 'cost_of_packaging', editable: true, width: 200 },\n        ]\n    )\n\n    window.v = vendorData;\n    window.pt = productTag\n\n    const [sendVendorPackaging, setSendVendorPackaging] = useState({\n        vendor_id: '',\n        product_tag: '',\n        cost_of_packaging: ''\n    })\n\n    const [sendWarehousePackaging, setSendWarehousePackaging] = useState({\n        product_tag: '',\n        cost_of_packaging: ''\n    })\n\n    useEffect(() => {\n        const fetchPVendor = async () => {\n            try {\n                const response = await axios.get(`http://localhost:8000/packagingvendor`)\n                setRowData(response.data)\n            }\n            catch (error) {\n                console.log('fetchPVendor threw an error, ', error);\n            }\n        }\n        const fetchPWarehouse = async () => {\n            try {\n                const response = await axios.get(`http://localhost:8000/packagingwarehouse`)\n                setRowData2(response.data)\n            }\n            catch (error) {\n                console.log('fetchPWarehouse threw an error, ', error);\n            }\n        }\n        fetchPVendor()\n        fetchPWarehouse()\n    }, []);\n\n    const handleInputChangeVendor = (fieldName, value) => {\n        setSendVendorPackaging({ ...sendVendorPackaging, [fieldName]: value });\n    };\n\n    const handleInputChangeWarehouse = (fieldName, value) => {\n        setSendWarehousePackaging({ ...sendWarehousePackaging, [fieldName]: value });\n    };\n\n\n    const handleSubmitVendor = async (e) => {\n        e.preventDefault();\n\n        try {\n            const response = await axios.post('http://localhost:8000/packagingvendor', sendVendorPackaging);\n            const fee = parseFloat(sendVendorPackaging.cost_of_packaging);\n            if (response.status !== 202) {\n                setRowData([...rowData, { ...sendVendorPackaging, cost_of_packaging: fee }]);\n            }\n            else {\n                setRowData(rowData.map(item =>\n                    item.vendor_id === sendVendorPackaging.vendor_id && item.product_tag === sendVendorPackaging.product_tag\n                        ? { ...sendVendorPackaging, cost_of_packaging: fee }\n                        : item\n                ));\n            }\n            setSendVendorPackaging({\n                vendor_id: '',\n                product_tag: '',\n                cost_of_packaging: ''\n            });\n\n        } catch (error) {\n            alert('Call titorrito');\n        }\n    }\n\n    const handleSubmitWarehouse = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await axios.post('http://localhost:8000/packagingwarehouse', sendWarehousePackaging);\n            const fee = parseFloat(sendWarehousePackaging.cost_of_packaging);\n            if (response.status === 202) {\n                console.log('response.status', response.status);\n                setRowData2(rowData2.map(item =>\n                    item.product_tag === sendWarehousePackaging.product_tag\n                        ? { ...sendWarehousePackaging, cost_of_packaging: fee }\n                        : item\n                ));\n            }\n            else {\n                console.log('response.status2', response.status);\n                setRowData2([...rowData2, { ...sendWarehousePackaging, cost_of_packaging: fee }]);\n            }\n            setSendWarehousePackaging({\n                product_tag: '',\n                cost_of_packaging: ''\n            });\n        }\n        catch (error) {\n            alert('Call titorrito');\n        }\n    }\n\n    const handleCellValueChangedVendor = async (event) => {\n        try {\n            for (let key in event.data) {\n                if (event.data[key] === undefined || event.data[key] === null) {\n                    console.error(`Error: ${key} is empty`);\n                    return;  // Exit the function if an empty field is found\n                }\n            }\n            const response = await axios.patch(`http://localhost:8000/packagingvendor/${event.data.vendor_id}/${event.data.product_tag}`, event.data);\n        }\n        catch (error) {\n            console.error('Error updating Vendor Packaging data:', error);\n        }\n    }\n\n    const handleCellValueChangedWarehouse = async (event) => {\n        try {\n            for (let key in event.data) {\n                if (event.data[key] === undefined || event.data[key] === null) {\n                    console.error(`Error: ${key} is empty`);\n                    return;  // Exit the function if an empty field is found\n                }\n            }\n            const response = await axios.patch(`http://localhost:8000/packagingwarehouse/${event.data.product_tag}`, event.data);\n        }\n        catch (error) {\n            console.error('Error updating Warehouse Packaging data:', error);\n        }\n    }\n\n    const onGridReady = params => {\n        setGridApi(params.api);\n    };\n\n    const onSelectionChanged = (param) => {\n        setSelectedRows(gridApi.getSelectedRows());\n    };\n\n    const onRowClicked = (event) => {\n        event.node.setSelected(!event.node.isSelected());\n    };\n\n    const onGridReady2 = params => {\n        setGridApi2(params.api);\n    };\n\n    const onSelectionChanged2 = (param) => {\n        setSelectedRows2(gridApi.getSelectedRows());\n    };\n\n    const onRowClicked2 = (event) => {\n        event.node.setSelected(!event.node.isSelected());\n    };\n\n\n    return (\n        <div className='mt-3 d-flex' style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '20px' }}>\n\n            \n\n            <div className=\"ag-theme-quartz-dark\" style={{ height: 700, width: 1270, textAlign: 'left' }}>\n                <SearchBar title='PackagingWarehouse' titlecount={rowData2.length} search={''} setSearch={''} data={rowData2} setData={rowData2} selectedRows={selectedRows2} setRerender={setRerender2} />\n                <AgGridReact\n                    onGridReady={onGridReady2}\n                    columnDefs={colData2}\n                    defaultColDef={{ flex: 1, filter: true, sortable: true, floatingFilter: true }}\n                    rowData={rowData2}\n                    onCellValueChanged={handleCellValueChangedWarehouse}\n                    onSelectionChanged={onSelectionChanged2}\n                    onRowClicked={onRowClicked2}\n                    suppressRowClickSelection={true}\n                    animateRows={true}\n                    rowSelection={'multiple'}\n                >\n                </AgGridReact>\n                <div style={{ width: '100%', height: '4em', marginTop: '1em', paddingLeft: 5 }}>\n                    <Form onSubmit={handleSubmitWarehouse}>\n                        <div className=\"row g-2\">\n                            <Col md={5}>\n                                <Form.Group controlId=\"product_tag\" style={{ textAlign: 'left' }}>\n                                    <Form.Label className=\"form-label\">Product Tag</Form.Label>\n                                    <Form.Select\n                                        name=\"product_tag\"\n                                        value={sendWarehousePackaging.product_tag}\n                                        onChange={(e) => handleInputChangeWarehouse('product_tag', e.target.value)}\n                                        required\n                                    >\n                                        <option value=\"\">Select Product Tag</option>\n                                        {productTag.map((tag) => (\n                                            <option key={tag.id} value={tag.id}>\n                                                {tag}\n                                            </option>\n                                        ))}\n                                    </Form.Select>\n                                </Form.Group>\n                            </Col>\n                            <Col md={5}>\n                                <Form.Group controlId=\"cost_of_packaging\" style={{ textAlign: 'left' }}>\n                                    <Form.Label className=\"form-label\">Packaging</Form.Label>\n                                    <Form.Control\n                                        type=\"number\"\n                                        name=\"cost_of_packaging\"\n                                        placeholder=\"Fee €\"\n                                        value={sendWarehousePackaging.cost_of_packaging}\n                                        onChange={(e) => handleInputChangeWarehouse('cost_of_packaging', e.target.value)}\n                                        required\n                                    />\n                                </Form.Group>\n                            </Col>\n                            <Col md={1} className=\"d-flex align-items-end\">\n                                <Button variant=\"primary\" type=\"submit\" style={{ height: '65px' }}>\n                                    <i className=\"bi bi-plus-square-fill\"></i>\n                                </Button>\n                            </Col>\n                        </div>\n                    </Form>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default GridPackaging;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}