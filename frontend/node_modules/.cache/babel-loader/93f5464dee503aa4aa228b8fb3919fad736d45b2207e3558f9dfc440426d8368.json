{"ast":null,"code":"var _jsxFileName = \"/Users/trtp/working/milo/final_pricecalc_master/frontend/src/components/PackagingView.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from 'react';\nimport axios from 'axios';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/styles/ag-grid.css';\nimport 'ag-grid-community/styles/ag-theme-quartz.css';\nimport '../AppGrid.css';\nimport Form from 'react-bootstrap/Form';\nimport { getData } from './CskuForm';\nimport { SearchBar } from './SearchBar';\n\n// const PackagingForm = ({ updatePackaging, rowData, onClose }) => {\n//     return (\n//         <div>\n//             <div className='d-flex flex-row flex-start justify-content-between' onKeyDown={handleKeyPress} style={{ marginLeft: 42, marginRight: 42, marginTop: 24}}>\n//                 <Form onSubmit={handleSubmit}>\n//                     <div className=\"d-flex flex-row justify-content-between\" style={{ width: '100%' }}>\n//                         <div className=\"m-1\">\n//                             <Form.Label>Product ID</Form.Label>\n//                             <Form.Group controlId=\"product_id\">\n//                                 <Form.Control\n//                                     type=\"text\"\n//                                     name=\"product_id\"\n//                                     value={productData.product_id}\n//                                     onChange={handleChange}\n//                                     placeholder=\"Enter Product ID\"\n//                                     isInvalid={isFormValidated && !productData.product_id}\n//                                     isValid={isFormValidated && productData.product_id}\n//                                     style={{ backgroundColor: isValidName ? 'white' : 'rgba(225, 0, 0, 0.6)' }}\n//                                     required\n//                                 />\n//                             </Form.Group>\n//                         </div>\n//                         <div className=\"m-1\">\n//                             <Form.Group controlId=\"manufacturer\">\n//                                 <Form.Label>Manufacturer</Form.Label>\n//                                 <Form.Control\n//                                     type=\"text\"\n//                                     name=\"manufacturer\"\n//                                     value={productData.manufacturer}\n//                                     onChange={handleChange}\n//                                     placeholder=\"Enter Manufacturer\"\n//                                     isInvalid={isFormValidated && !productData.manufacturer}\n//                                     isValid={isFormValidated && productData.manufacturer}\n//                                     required\n//                                 />\n//                             </Form.Group>\n//                         </div>\n//                         <div className='m-1'>\n//                             <Form.Group controlId=\"price\">\n//                                 <Form.Label>Price</Form.Label>\n//                                 <Form.Control\n//                                     type=\"number\"\n//                                     name=\"price\"\n//                                     value={productData.price}\n//                                     onChange={handleChange}\n//                                     placeholder=\"Enter Price\"\n//                                     isInvalid={isFormValidated && !productData.price}\n//                                     isValid={isFormValidated && productData.price}\n//                                     required\n//                                 />\n//                             </Form.Group>\n//                         </div>\n//                         <div className='m-1'>\n//                             <Form.Group controlId=\"stock\">\n//                                 <Form.Label>Stock</Form.Label>\n//                                 <Form.Control\n//                                     type=\"number\"\n//                                     name=\"stock\"\n//                                     value={productData.stock}\n//                                     onChange={handleChange}\n//                                     placeholder=\"Enter Stock\"\n//                                     isInvalid={isFormValidated && !productData.stock}\n//                                     isValid={isFormValidated && productData.stock}\n//                                     required\n//                                 />\n//                             </Form.Group>\n//                         </div>\n//                     </div>\n//                 </Form>\n//                 <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit} className='mb-1 mt-1'>\n//                     Submit\n//                 </Button>\n//             </div>\n//         </div>\n//     )\n//  } \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GridPackaging = () => {\n  _s();\n  const [rowData, setRowData] = useState([]);\n  const [rowData2, setRowData2] = useState([]);\n  const [colData, setColData] = useState([{\n    headerName: 'Vendor ID',\n    field: 'vendor_id',\n    width: 150\n  }, {\n    headerName: 'Product Tag',\n    field: 'product_tag',\n    width: 150\n  }, {\n    headerName: 'Cost of Packaging Fee',\n    field: 'cost_of_packaging',\n    editable: true,\n    width: 200\n  }]);\n  const [colData2, setColData2] = useState([{\n    headerName: 'Product Tag',\n    field: 'product_tag',\n    width: 150\n  }, {\n    headerName: 'Cost of Packaging Fee',\n    field: 'cost_of_packaging',\n    editable: true,\n    width: 200\n  }]);\n  useEffect(() => {\n    const fetchPVendor = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8000/packagingvendor`);\n        console.log('hill...', response.data);\n        setRowData(response.data);\n      } catch (error) {\n        console.log('fetchPVendor threw an error, ', error);\n      }\n    };\n    const fetchPWarehouse = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8000/packagingwarehouse`);\n        setRowData2(response.data);\n      } catch (error) {\n        console.log('fetchPWarehouse threw an error, ', error);\n      }\n    };\n    fetchPVendor();\n    fetchPWarehouse();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-3 d-flex flex-row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ag-theme-quartz-dark\",\n      style: {\n        height: 300,\n        width: 400\n      },\n      children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n        columnDefs: colData,\n        defaultColDef: {\n          flex: 1\n        },\n        rowData: rowData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mr-4 ag-theme-quartz-dark\",\n      style: {\n        height: 800,\n        width: 400\n      },\n      children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n        columnDefs: colData2,\n        defaultColDef: {\n          flex: 1\n        },\n        rowData: rowData2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n};\n_s(GridPackaging, \"rItU2Q7kdAnwxLB9qOk9nBtp8fA=\");\n_c = GridPackaging;\nexport default GridPackaging;\nvar _c;\n$RefreshReg$(_c, \"GridPackaging\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","axios","AgGridReact","Form","getData","SearchBar","jsxDEV","_jsxDEV","GridPackaging","_s","rowData","setRowData","rowData2","setRowData2","colData","setColData","headerName","field","width","editable","colData2","setColData2","fetchPVendor","response","get","console","log","data","error","fetchPWarehouse","className","children","style","height","columnDefs","defaultColDef","flex","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/trtp/working/milo/final_pricecalc_master/frontend/src/components/PackagingView.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react'\nimport axios from 'axios'\nimport { AgGridReact } from 'ag-grid-react'\nimport 'ag-grid-community/styles/ag-grid.css'\nimport 'ag-grid-community/styles/ag-theme-quartz.css'\nimport '../AppGrid.css';\nimport Form from 'react-bootstrap/Form';\n\nimport { getData } from './CskuForm';\nimport { SearchBar } from './SearchBar';\n\n// const PackagingForm = ({ updatePackaging, rowData, onClose }) => {\n//     return (\n//         <div>\n//             <div className='d-flex flex-row flex-start justify-content-between' onKeyDown={handleKeyPress} style={{ marginLeft: 42, marginRight: 42, marginTop: 24}}>\n//                 <Form onSubmit={handleSubmit}>\n//                     <div className=\"d-flex flex-row justify-content-between\" style={{ width: '100%' }}>\n//                         <div className=\"m-1\">\n//                             <Form.Label>Product ID</Form.Label>\n//                             <Form.Group controlId=\"product_id\">\n//                                 <Form.Control\n//                                     type=\"text\"\n//                                     name=\"product_id\"\n//                                     value={productData.product_id}\n//                                     onChange={handleChange}\n//                                     placeholder=\"Enter Product ID\"\n//                                     isInvalid={isFormValidated && !productData.product_id}\n//                                     isValid={isFormValidated && productData.product_id}\n//                                     style={{ backgroundColor: isValidName ? 'white' : 'rgba(225, 0, 0, 0.6)' }}\n//                                     required\n//                                 />\n//                             </Form.Group>\n//                         </div>\n//                         <div className=\"m-1\">\n//                             <Form.Group controlId=\"manufacturer\">\n//                                 <Form.Label>Manufacturer</Form.Label>\n//                                 <Form.Control\n//                                     type=\"text\"\n//                                     name=\"manufacturer\"\n//                                     value={productData.manufacturer}\n//                                     onChange={handleChange}\n//                                     placeholder=\"Enter Manufacturer\"\n//                                     isInvalid={isFormValidated && !productData.manufacturer}\n//                                     isValid={isFormValidated && productData.manufacturer}\n//                                     required\n//                                 />\n//                             </Form.Group>\n//                         </div>\n//                         <div className='m-1'>\n//                             <Form.Group controlId=\"price\">\n//                                 <Form.Label>Price</Form.Label>\n//                                 <Form.Control\n//                                     type=\"number\"\n//                                     name=\"price\"\n//                                     value={productData.price}\n//                                     onChange={handleChange}\n//                                     placeholder=\"Enter Price\"\n//                                     isInvalid={isFormValidated && !productData.price}\n//                                     isValid={isFormValidated && productData.price}\n//                                     required\n//                                 />\n//                             </Form.Group>\n//                         </div>\n//                         <div className='m-1'>\n//                             <Form.Group controlId=\"stock\">\n//                                 <Form.Label>Stock</Form.Label>\n//                                 <Form.Control\n//                                     type=\"number\"\n//                                     name=\"stock\"\n//                                     value={productData.stock}\n//                                     onChange={handleChange}\n//                                     placeholder=\"Enter Stock\"\n//                                     isInvalid={isFormValidated && !productData.stock}\n//                                     isValid={isFormValidated && productData.stock}\n//                                     required\n//                                 />\n//                             </Form.Group>\n//                         </div>\n//                     </div>\n//                 </Form>\n//                 <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit} className='mb-1 mt-1'>\n//                     Submit\n//                 </Button>\n//             </div>\n//         </div>\n//     )\n//  } \n\n\n\n\nconst GridPackaging = () => {\n    const [rowData, setRowData] = useState([])\n    const [rowData2, setRowData2] = useState([])\n    const [colData, setColData] = useState(\n        [\n            { headerName: 'Vendor ID', field: 'vendor_id', width: 150 },\n            { headerName: 'Product Tag', field: 'product_tag', width: 150 },\n            { headerName: 'Cost of Packaging Fee', field: 'cost_of_packaging', editable: true, width: 200 },\n        ]\n    )\n    const [colData2, setColData2] = useState(\n        [\n            { headerName: 'Product Tag', field: 'product_tag', width: 150 },\n            { headerName: 'Cost of Packaging Fee', field: 'cost_of_packaging', editable: true, width: 200 },\n        ]\n    )\n\n    useEffect(() => {\n        const fetchPVendor = async () => {\n            try {\n                const response = await axios.get(`http://localhost:8000/packagingvendor`)\n                console.log('hill...', response.data)\n                setRowData(response.data)\n            }\n            catch (error) {\n                console.log('fetchPVendor threw an error, ', error);\n            }\n        }\n        const fetchPWarehouse = async () => {\n            try {\n                const response = await axios.get(`http://localhost:8000/packagingwarehouse`)\n                setRowData2(response.data)\n            }\n            catch (error) {\n                console.log('fetchPWarehouse threw an error, ', error);\n            }\n        }\n        fetchPVendor()\n        fetchPWarehouse()\n    }, []);\n\n    return (\n        <div className='mt-3 d-flex flex-row'>\n            <div className=\"ag-theme-quartz-dark\" style={{ height: 300, width: 400 }}>\n                {/* <SearchBar title='Packaging' titlecount={rowData.length} search={search} setSearch={setSearch} /> */}\n\n                <AgGridReact\n                    columnDefs={colData}\n                    defaultColDef={{ flex: 1 }}\n                    rowData={rowData}>\n                </AgGridReact>\n            </div>\n\n            <div className=\"mr-4 ag-theme-quartz-dark\" style={{ height: 800, width: 400 }}>\n                <AgGridReact\n                    columnDefs={colData2}\n                    defaultColDef={{ flex: 1 }}\n                    rowData={rowData2}>\n                </AgGridReact>\n            </div>\n        </div>\n    )\n\n}\n\nexport default GridPackaging;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAC3D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,eAAe;AAC3C,OAAO,sCAAsC;AAC7C,OAAO,8CAA8C;AACrD,OAAO,gBAAgB;AACvB,OAAOC,IAAI,MAAM,sBAAsB;AAEvC,SAASC,OAAO,QAAQ,YAAY;AACpC,SAASC,SAAS,QAAQ,aAAa;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAKA,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAClC,CACI;IAAEgB,UAAU,EAAE,WAAW;IAAEC,KAAK,EAAE,WAAW;IAAEC,KAAK,EAAE;EAAI,CAAC,EAC3D;IAAEF,UAAU,EAAE,aAAa;IAAEC,KAAK,EAAE,aAAa;IAAEC,KAAK,EAAE;EAAI,CAAC,EAC/D;IAAEF,UAAU,EAAE,uBAAuB;IAAEC,KAAK,EAAE,mBAAmB;IAAEE,QAAQ,EAAE,IAAI;IAAED,KAAK,EAAE;EAAI,CAAC,CAEvG,CAAC;EACD,MAAM,CAACE,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CACpC,CACI;IAAEgB,UAAU,EAAE,aAAa;IAAEC,KAAK,EAAE,aAAa;IAAEC,KAAK,EAAE;EAAI,CAAC,EAC/D;IAAEF,UAAU,EAAE,uBAAuB;IAAEC,KAAK,EAAE,mBAAmB;IAAEE,QAAQ,EAAE,IAAI;IAAED,KAAK,EAAE;EAAI,CAAC,CAEvG,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACZ,MAAMwB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAAE,uCAAsC,CAAC;QACzEC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,QAAQ,CAACI,IAAI,CAAC;QACrChB,UAAU,CAACY,QAAQ,CAACI,IAAI,CAAC;MAC7B,CAAC,CACD,OAAOC,KAAK,EAAE;QACVH,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEE,KAAK,CAAC;MACvD;IACJ,CAAC;IACD,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACA,MAAMN,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAAE,0CAAyC,CAAC;QAC5EX,WAAW,CAACU,QAAQ,CAACI,IAAI,CAAC;MAC9B,CAAC,CACD,OAAOC,KAAK,EAAE;QACVH,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEE,KAAK,CAAC;MAC1D;IACJ,CAAC;IACDN,YAAY,CAAC,CAAC;IACdO,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACItB,OAAA;IAAKuB,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACjCxB,OAAA;MAAKuB,SAAS,EAAC,sBAAsB;MAACE,KAAK,EAAE;QAAEC,MAAM,EAAE,GAAG;QAAEf,KAAK,EAAE;MAAI,CAAE;MAAAa,QAAA,eAGrExB,OAAA,CAACL,WAAW;QACRgC,UAAU,EAAEpB,OAAQ;QACpBqB,aAAa,EAAE;UAAEC,IAAI,EAAE;QAAE,CAAE;QAC3B1B,OAAO,EAAEA;MAAQ;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,eAENjC,OAAA;MAAKuB,SAAS,EAAC,2BAA2B;MAACE,KAAK,EAAE;QAAEC,MAAM,EAAE,GAAG;QAAEf,KAAK,EAAE;MAAI,CAAE;MAAAa,QAAA,eAC1ExB,OAAA,CAACL,WAAW;QACRgC,UAAU,EAAEd,QAAS;QACrBe,aAAa,EAAE;UAAEC,IAAI,EAAE;QAAE,CAAE;QAC3B1B,OAAO,EAAEE;MAAS;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAGd,CAAC;AAAA/B,EAAA,CA/DKD,aAAa;AAAAiC,EAAA,GAAbjC,aAAa;AAiEnB,eAAeA,aAAa;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}