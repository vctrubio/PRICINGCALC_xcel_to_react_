{"ast":null,"code":"var _jsxFileName = \"/Users/trtp/working/milo/final_pricecalc_master/frontend/src/components/SkuView.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport axios from 'axios';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/styles/ag-grid.css';\nimport 'ag-grid-community/styles/ag-theme-quartz.css';\nimport '../AppGrid.css';\nimport { SkuForm } from './SkuForm';\nimport { SearchBar } from './SearchBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function getData(model) {\n  try {\n    const response = await axios.get(`http://localhost:8000/${model}`);\n    const dataArray = Object.values(response.data);\n    window.ptr = dataArray;\n    return dataArray;\n  } catch (error) {\n    console.error('There was a BIGFAT error!', error);\n  }\n}\nconst GridTwo = () => {\n  _s();\n  const [gridApi, setGridApi] = useState(null);\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [search, setSearch] = useState('');\n  const [rowData, setRowData] = useState([]);\n  const [colData, setColData] = useState([{\n    headerName: 'SKU ID',\n    field: 'name_id',\n    minWidth: 140,\n    checkboxSelection: true,\n    headerCheckboxSelection: true,\n    headerCheckboxSelectionFilteredOnly: true\n  }, {\n    headerName: 'Vendor ID',\n    field: 'vendor_id',\n    width: 140\n  }, {\n    headerName: 'Description',\n    field: 'description',\n    editable: true,\n    width: 300\n  }, {\n    headerName: 'COGS',\n    field: 'cogs',\n    editable: true,\n    width: 100\n  }, {\n    headerName: 'First Mile',\n    field: 'first_mile',\n    editable: true,\n    width: 100\n  }, {\n    headerName: 'Weight KG',\n    field: 'weight_kg',\n    editable: true,\n    width: 110\n  }, {\n    headerName: 'PP Supplier',\n    field: '_pp_supplier',\n    width: 120,\n    valueFormatter: params => `${parseFloat(params.value).toFixed(2)}`\n  }, {\n    headerName: 'Exchange Fee',\n    field: '_exchange_fee',\n    width: 120,\n    valueFormatter: params => `${parseFloat(params.value).toFixed(2)}`\n  }, {\n    headerName: 'Total',\n    field: '_total_cost',\n    width: 150,\n    valueFormatter: params => `${parseFloat(params.value).toFixed(2)}`\n  }]);\n  window.row = rowData;\n  const updateSkuData = async () => {\n    try {\n      const updatedData = await getData('sku');\n      setRowData(updatedData);\n    } catch (error) {\n      console.error('Error updating SKU data:', error);\n      // Handle error appropriately (e.g., display a message)\n    }\n  };\n  const [showAddVendor, setShowAddVendor] = useState(false);\n  useEffect(() => {\n    getData('sku').then(data => {\n      setRowData(data);\n    });\n  }, []);\n  window.test = rowData;\n  const handleCellValueChanged = async event => {\n    try {\n      for (let key in event.data) {\n        if (event.data[key] === undefined || event.data[key] === null) {\n          console.error(`Error: ${key} is empty`);\n          return; // Exit the function if an empty field is found\n        }\n      }\n      const response = await axios.patch(`http://localhost:8000/sku/${event.data.name_id}`, event.data);\n    } catch (error) {\n      console.error('Error updating SKU data:', error);\n      // Handle error appropriately (e.g., display a message)\n    }\n  };\n  const getrowId = useCallback(params => {\n    return params.data.name_id;\n  });\n  const onGridReady = params => {\n    setGridApi(params.api);\n  };\n  const onSelectionChanged = param => {\n    setSelectedRows(gridApi.getSelectedRows());\n  };\n  const onRowClicked = event => {\n    event.node.setSelected(!event.node.isSelected());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ag-theme-quartz-dark\",\n    style: {\n      height: '68vh',\n      width: 1270\n    },\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      title: \"SKU\",\n      titlecount: rowData.length,\n      search: search,\n      setSearch: setSearch,\n      data: rowData,\n      setData: setRowData,\n      selectedRows: selectedRows,\n      setRerender: setRerender\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AgGridReact, {\n      onGridReady: onGridReady,\n      enableCellChangeFlash: true,\n      columnDefs: colData,\n      defaultColDef: {\n        flex: 1,\n        filter: true,\n        sortable: true,\n        floatingFilter: true\n      },\n      rowData: rowData,\n      onCellValueChanged: handleCellValueChanged,\n      onSelectionChanged: onSelectionChanged,\n      onRowClicked: onRowClicked,\n      suppressRowClickSelection: true,\n      animateRows: true,\n      rowSelection: 'multiple'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SkuForm, {\n      addSku: updateSkuData,\n      rowData: rowData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n_s(GridTwo, \"yrynPeCPj/sPPnIdlLB4EEwukBA=\");\n_c = GridTwo;\nexport default GridTwo;\nvar _c;\n$RefreshReg$(_c, \"GridTwo\");","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","useState","axios","AgGridReact","SkuForm","SearchBar","jsxDEV","_jsxDEV","getData","model","response","get","dataArray","Object","values","data","window","ptr","error","console","GridTwo","_s","gridApi","setGridApi","selectedRows","setSelectedRows","search","setSearch","rowData","setRowData","colData","setColData","headerName","field","minWidth","checkboxSelection","headerCheckboxSelection","headerCheckboxSelectionFilteredOnly","width","editable","valueFormatter","params","parseFloat","value","toFixed","row","updateSkuData","updatedData","showAddVendor","setShowAddVendor","then","test","handleCellValueChanged","event","key","undefined","patch","name_id","getrowId","onGridReady","api","onSelectionChanged","param","getSelectedRows","onRowClicked","node","setSelected","isSelected","className","style","height","children","title","titlecount","length","setData","setRerender","fileName","_jsxFileName","lineNumber","columnNumber","enableCellChangeFlash","columnDefs","defaultColDef","flex","filter","sortable","floatingFilter","onCellValueChanged","suppressRowClickSelection","animateRows","rowSelection","addSku","_c","$RefreshReg$"],"sources":["/Users/trtp/working/milo/final_pricecalc_master/frontend/src/components/SkuView.js"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport axios from 'axios'\nimport { AgGridReact } from 'ag-grid-react'\nimport 'ag-grid-community/styles/ag-grid.css'\nimport 'ag-grid-community/styles/ag-theme-quartz.css'\nimport '../AppGrid.css';\n\nimport { SkuForm } from './SkuForm';\nimport { SearchBar } from './SearchBar';\n\n\nasync function getData(model) {\n    try {\n        const response = await axios.get(`http://localhost:8000/${model}`);\n        const dataArray = Object.values(response.data);\n        window.ptr = dataArray;\n        return dataArray;\n    } catch (error) {\n        console.error('There was a BIGFAT error!', error);\n    }\n}\n\n\n\nconst GridTwo = () => {\n    const [gridApi, setGridApi] = useState(null);\n    const [selectedRows, setSelectedRows] = useState([]);\n    const [search, setSearch] = useState('');\n    const [rowData, setRowData] = useState([])\n    const [colData, setColData] = useState(\n        [\n            {\n                headerName: 'SKU ID', field: 'name_id', minWidth: 140,\n                checkboxSelection: true,\n                headerCheckboxSelection: true,\n                headerCheckboxSelectionFilteredOnly: true\n            },\n            { headerName: 'Vendor ID', field: 'vendor_id', width: 140 },\n            { headerName: 'Description', field: 'description', editable: true, width: 300 },\n            { headerName: 'COGS', field: 'cogs', editable: true, width: 100 },\n            { headerName: 'First Mile', field: 'first_mile', editable: true, width: 100 },\n            { headerName: 'Weight KG', field: 'weight_kg', editable: true, width: 110 },\n            { headerName: 'PP Supplier', field: '_pp_supplier', width: 120, valueFormatter: params => `${parseFloat(params.value).toFixed(2)}` },\n            { headerName: 'Exchange Fee', field: '_exchange_fee', width: 120, valueFormatter: params => `${parseFloat(params.value).toFixed(2)}` },\n            { headerName: 'Total', field: '_total_cost', width: 150, valueFormatter: params => `${parseFloat(params.value).toFixed(2)}` },\n        ]\n    )\n\n    window.row = rowData\n    const updateSkuData = async () => {\n        try {\n            const updatedData = await getData('sku');\n            setRowData(updatedData);\n        } catch (error) {\n            console.error('Error updating SKU data:', error);\n            // Handle error appropriately (e.g., display a message)\n        }\n    };\n\n    const [showAddVendor, setShowAddVendor] = useState(false);\n\n    useEffect(() => {\n        getData('sku').then(data => {\n            setRowData(data);\n        });\n    }, []);\n\n    window.test = rowData\n    const handleCellValueChanged = async (event) => {\n        try {\n            for (let key in event.data) {\n                if (event.data[key] === undefined || event.data[key] === null) {\n                    console.error(`Error: ${key} is empty`);\n                    return;  // Exit the function if an empty field is found\n                }\n            }\n            const response = await axios.patch(`http://localhost:8000/sku/${event.data.name_id}`, event.data);\n        } catch (error) {\n            console.error('Error updating SKU data:', error);\n            // Handle error appropriately (e.g., display a message)\n        }\n    }\n\n    const getrowId = useCallback(params => {\n        return params.data.name_id\n    })\n\n    const onGridReady = params => {\n        setGridApi(params.api);\n    };\n\n    const onSelectionChanged = (param) => {\n        setSelectedRows(gridApi.getSelectedRows());\n    };\n\n    const onRowClicked = (event) => {\n        event.node.setSelected(!event.node.isSelected());\n    };\n\n\n    return (\n        <div className=\"ag-theme-quartz-dark\" style={{ height: '68vh', width: 1270 }}>\n\n            <SearchBar title='SKU' titlecount={rowData.length} search={search} setSearch={setSearch} data={rowData}  setData={setRowData} selectedRows={selectedRows} setRerender={setRerender}/>\n            <AgGridReact\n                onGridReady={onGridReady}\n                enableCellChangeFlash={true}\n                columnDefs={colData}\n                defaultColDef={{ flex: 1, filter: true, sortable: true, floatingFilter: true }} rowData={rowData}\n                onCellValueChanged={handleCellValueChanged}\n                onSelectionChanged={onSelectionChanged}\n                onRowClicked={onRowClicked}\n                suppressRowClickSelection={true}\n                animateRows={true}\n                rowSelection={'multiple'}\n            >\n            </AgGridReact>\n            <SkuForm addSku={updateSkuData} rowData={rowData} />\n        </div>\n    )\n}\n\nexport default GridTwo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}