{"ast":null,"code":"var _jsxFileName = \"/Users/trtp/working/milo/final_pricecalc_master/frontend/src/components/WarehouseView.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport axios from 'axios';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/styles/ag-grid.css';\nimport 'ag-grid-community/styles/ag-theme-quartz.css';\nimport '../AppGrid.css';\nimport { SearchBar } from './SearchBar';\nimport WarehouseForm from './WarehouseForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function getData(model) {\n  try {\n    const response = await axios.get(`http://localhost:8000/${model}`);\n    return response.data;\n  } catch (error) {\n    console.error('There was a BIGFAT error!', error);\n  }\n}\nconst GridWarehouse = () => {\n  _s();\n  const [gridApi, setGridApi] = useState(null);\n  const [rerender, setRerender] = useState(false);\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [search, setSearch] = useState('');\n  const [rowData, setRowData] = useState([]);\n  const [colData, setColData] = useState([{\n    headerName: 'WH ID',\n    field: 'name_id',\n    minWidth: 300,\n    checkboxSelection: true,\n    headerCheckboxSelection: true,\n    headerCheckboxSelectionFilteredOnly: true\n  }, {\n    headerName: 'Product Tag',\n    field: 'product_tag',\n    minWidth: 120\n  },\n  //dropdown for selecting product tag to do \n  {\n    headerName: 'Fees',\n    children: [{\n      headerName: 'Unit',\n      field: 'unit_fee',\n      editable: true,\n      minWidth: 100\n    }, {\n      headerName: 'Storage',\n      field: 'storage_fee',\n      editable: true,\n      minWidth: 140\n    }, {\n      headerName: 'Pick And Pack',\n      field: 'pick_and_pack_fee',\n      editable: true,\n      minWidth: 180\n    }, {\n      headerName: 'Custom',\n      field: 'custom_fee',\n      editable: true,\n      minWidth: 140\n    }]\n  }]);\n  const updateWhData = data => {\n    setRowData(prevRowData => [...prevRowData, data]);\n  };\n  useEffect(() => {\n    getData('warehouse').then(data => {\n      const flattenedData = [];\n      for (const warehouse in data) {\n        for (const product_tag in data[warehouse]) {\n          const item = data[warehouse][product_tag];\n          flattenedData.push({\n            warehouse,\n            product_tag,\n            ...item\n          });\n        }\n      }\n      setRowData(prevRowData => {\n        const newData = [...prevRowData];\n        flattenedData.forEach(item => {\n          const exists = newData.find(row => row.name_id === item.name_id && row.product_tag === item.product_tag);\n          if (!exists) {\n            newData.push(item);\n          }\n        });\n        return newData;\n      });\n    });\n  }, []);\n  window.ptr = rowData;\n  const handleCellValueChanged = async event => {\n    try {\n      console.log('event.data', event.data);\n      for (let key in event.data) {\n        if (event.data[key] === undefined || event.data[key] === null) {\n          console.error(`Error: ${key} is empty`);\n          return;\n        }\n      }\n      const response = await axios.patch(`http://localhost:8000/warehouse/${event.data.name_id}/${event.data.product_tag}`, event.data);\n    } catch (error) {\n      console.error('Error updating Warehouse data:', error);\n      // Handle error appropriately (e.g., display a message)\n    }\n  };\n  const onGridReady = params => {\n    setGridApi(params.api);\n  };\n  const onSelectionChanged = param => {\n    setSelectedRows(gridApi.getSelectedRows());\n  };\n  const onRowClicked = event => {\n    event.node.setSelected(!event.node.isSelected());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ag-theme-quartz-dark\",\n    style: {\n      height: '70vh',\n      width: 1270\n    },\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      title: \"Warehouse\",\n      titlecount: rowData.length,\n      search: search,\n      setSearch: setSearch,\n      data: rowData,\n      setData: setRowData,\n      selectedRows: selectedRows,\n      setRerender: setRerender\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AgGridReact, {\n      columnDefs: colData,\n      defaultColDef: {\n        flex: 1,\n        filter: true,\n        sortable: true,\n        floatingFilter: true\n      },\n      rowData: rowData,\n      onCellValueChanged: handleCellValueChanged,\n      onSelectionChanged: onSelectionChanged,\n      onRowClicked: onRowClicked,\n      suppressRowClickSelection: true,\n      animateRows: true,\n      rowSelection: 'multiple'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(WarehouseForm, {\n      addWh: updateWhData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n_s(GridWarehouse, \"8sIot+3Penmuvh4YYNT/+mjhoKs=\");\n_c = GridWarehouse;\nexport default GridWarehouse;\nvar _c;\n$RefreshReg$(_c, \"GridWarehouse\");","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","useState","axios","AgGridReact","SearchBar","WarehouseForm","jsxDEV","_jsxDEV","getData","model","response","get","data","error","console","GridWarehouse","_s","gridApi","setGridApi","rerender","setRerender","selectedRows","setSelectedRows","search","setSearch","rowData","setRowData","colData","setColData","headerName","field","minWidth","checkboxSelection","headerCheckboxSelection","headerCheckboxSelectionFilteredOnly","children","editable","updateWhData","prevRowData","then","flattenedData","warehouse","product_tag","item","push","newData","forEach","exists","find","row","name_id","window","ptr","handleCellValueChanged","event","log","key","undefined","patch","onGridReady","params","api","onSelectionChanged","param","getSelectedRows","onRowClicked","node","setSelected","isSelected","className","style","height","width","title","titlecount","length","setData","fileName","_jsxFileName","lineNumber","columnNumber","columnDefs","defaultColDef","flex","filter","sortable","floatingFilter","onCellValueChanged","suppressRowClickSelection","animateRows","rowSelection","addWh","_c","$RefreshReg$"],"sources":["/Users/trtp/working/milo/final_pricecalc_master/frontend/src/components/WarehouseView.js"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport axios from 'axios'\nimport { AgGridReact } from 'ag-grid-react'\nimport 'ag-grid-community/styles/ag-grid.css'\nimport 'ag-grid-community/styles/ag-theme-quartz.css'\nimport '../AppGrid.css';\n\nimport { SearchBar } from './SearchBar'\nimport WarehouseForm from './WarehouseForm'\n\nasync function getData(model) {\n    try {\n        const response = await axios.get(`http://localhost:8000/${model}`);\n        return response.data;\n    } catch (error) {\n        console.error('There was a BIGFAT error!', error);\n    }\n}\n\n\nconst GridWarehouse = () => {\n    const [gridApi, setGridApi] = useState(null);\n    const [rerender, setRerender] = useState(false)\n    const [selectedRows, setSelectedRows] = useState([]);\n    const [search, setSearch] = useState('');\n    const [rowData, setRowData] = useState([])\n    const [colData, setColData] = useState(\n        [\n            {\n                headerName: 'WH ID', field: 'name_id', minWidth: 300,\n                checkboxSelection: true,\n                headerCheckboxSelection: true,\n                headerCheckboxSelectionFilteredOnly: true\n            },\n            { headerName: 'Product Tag', field: 'product_tag', minWidth: 120 }, //dropdown for selecting product tag to do \n            {\n                headerName: 'Fees', children: [\n                    { headerName: 'Unit', field: 'unit_fee', editable: true, minWidth: 100 },\n                    { headerName: 'Storage', field: 'storage_fee', editable: true, minWidth: 140 },\n                    { headerName: 'Pick And Pack', field: 'pick_and_pack_fee', editable: true, minWidth: 180 },\n                    { headerName: 'Custom', field: 'custom_fee', editable: true, minWidth: 140 },]\n            }\n        ]\n    )\n\n    const updateWhData = (data) => {\n        setRowData(prevRowData => [...prevRowData, data]);\n    };\n\n\n    useEffect(() => {\n        getData('warehouse').then(data => {\n            const flattenedData = [];\n\n            for (const warehouse in data) {\n                for (const product_tag in data[warehouse]) {\n                    const item = data[warehouse][product_tag];\n                    flattenedData.push({ warehouse, product_tag, ...item });\n                }\n            }\n            setRowData(prevRowData => {\n                const newData = [...prevRowData];\n                flattenedData.forEach(item => {\n                    const exists = newData.find(row => row.name_id === item.name_id && row.product_tag === item.product_tag);\n                    if (!exists) {\n                        newData.push(item);\n                    }\n                });\n                return newData;\n            });\n\n        });\n    }, []);\n\n    window.ptr = rowData;\n\n    const handleCellValueChanged = async (event) => {\n        try {\n            console.log('event.data', event.data)\n            for (let key in event.data) {\n                if (event.data[key] === undefined || event.data[key] === null) {\n                    console.error(`Error: ${key} is empty`);\n                    return;\n                }\n            }\n            const response = await axios.patch(`http://localhost:8000/warehouse/${event.data.name_id}/${event.data.product_tag}`, event.data);\n        } catch (error) {\n            console.error('Error updating Warehouse data:', error);\n            // Handle error appropriately (e.g., display a message)\n        }\n    }\n\n    const onGridReady = params => {\n        setGridApi(params.api);\n    };\n\n    const onSelectionChanged = (param) => {\n        setSelectedRows(gridApi.getSelectedRows());\n    };\n\n    const onRowClicked = (event) => {\n        event.node.setSelected(!event.node.isSelected());\n    };\n\n\n    return (\n        <div className=\"ag-theme-quartz-dark\" style={{ height: '70vh', width: 1270 }}>\n            <SearchBar title='Warehouse' titlecount={rowData.length} search={search} setSearch={setSearch} data={rowData} setData={setRowData} selectedRows={selectedRows} setRerender={setRerender} />\n            <AgGridReact\n                columnDefs={colData}\n                defaultColDef={{ flex: 1, filter: true, sortable: true, floatingFilter: true}}              \n                  rowData={rowData}\n                onCellValueChanged={handleCellValueChanged}\n                onSelectionChanged={onSelectionChanged}\n                onRowClicked={onRowClicked}\n                suppressRowClickSelection={true}\n                animateRows={true}\n                rowSelection={'multiple'}\n            >\n            </AgGridReact>\n            <WarehouseForm addWh={updateWhData} />\n        </div>\n    )\n}\n\nexport default GridWarehouse;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}