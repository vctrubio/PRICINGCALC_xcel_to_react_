{"ast":null,"code":"var _jsxFileName = \"/Users/trtp/working/milo/final_pricecalc_master/frontend/src/components/SearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useMemo } from 'react';\nimport { Form, Dropdown, Button, ButtonGroup, Col } from 'react-bootstrap';\nimport * as XLSX from 'xlsx';\nimport { CSVLink } from 'react-csv';\n\n//to upload get title add .xlsx and post to api\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SearchBar = ({\n  title,\n  titlecount,\n  data,\n  search,\n  setSearch\n}) => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  function transformBack(header) {\n    if (header.endsWith('_')) {\n      header = header.slice(0, -1) + '%';\n    } else if (header.startsWith('_')) {\n      header = header.replace('_', '/');\n    }\n    header = header.replace(/_/g, ' ');\n    header = header.split(' ').map((word, index) => index === 0 ? word.charAt(0).toUpperCase() + word.slice(1) : word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n    return header;\n  }\n  const handleExport = () => {\n    const title_name = title + '.xlsx';\n    const transformedData = data.map((row, index) => {\n      let transformedRow = {};\n      for (let key in row) {\n        let value = row[key];\n        if (typeof value === 'object' || value === '' || value === null) {\n          continue;\n        }\n        if (data[index + 1] && data[index + 1][key]) {\n          transformedRow[transformBack(key)] = value;\n        }\n      }\n      return transformedRow;\n    });\n    const ws = XLSX.utils.json_to_sheet(transformedData);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\n    XLSX.writeFile(wb, title_name);\n    console.log('exported data complete:');\n  };\n  const handleImport = async () => {\n    try {\n      const fileInput = document.createElement('input');\n      fileInput.type = 'file';\n      fileInput.accept = '.xlsx';\n      fileInput.click();\n      const filePromise = new Promise(resolve => {\n        fileInput.addEventListener('change', () => {\n          resolve(fileInput.files[0]);\n        });\n      });\n      const file = await filePromise;\n      if (file) {\n        console.log('file:', file);\n        const formData = new FormData();\n        formData.append('file_name', title + '.xlsx');\n        formData.append('file', file);\n        const response = await fetch('http://localhost:8000/upload', {\n          method: 'POST',\n          body: formData\n        });\n        console.log(response.data);\n\n        // const data = await response.json();\n        // console.log(data); // log the response from the server\n      }\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex justify-content-between p-2 mt-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontFamily: 'Roboto',\n        paddingTop: 16\n      },\n      children: [title, \" : \", titlecount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        padding: '12px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-dark\",\n        style: {\n          marginLeft: '10px',\n          fontSize: '20px',\n          textAlign: 'center'\n        },\n        title: `Upload: '${title}'`,\n        onClick: handleImport,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"bi bi-upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-dark\",\n        style: {\n          marginLeft: '10px',\n          fontSize: '20px',\n          paddingTop: 14\n        },\n        title: `Download:'${title}'`,\n        onClick: handleExport,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"bi bi-cloud-download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchBar, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = SearchBar;\n{/* <searchbar style={{ padding: 5 }}>\n    <ButtonGroup>\n        <Form.Control\n            type=\"text\"\n            placeholder=\"Filter\"\n            value={search}\n            onChange={e => setSearch(e.target.value)}\n            style={{\n                backgroundColor: search ? 'white' : 'grey',\n                borderColor: 'black'\n            }}\n            onFocus={e => e.target.style.backgroundColor = 'white'}\n            onBlur={e => e.target.style.backgroundColor = 'grey'}\n        />                        <Button variant='dark'>\n            <i className=\"bi bi-search\"></i>\n        </Button>\n    </ButtonGroup>\n </searchbar> */}\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useMemo","Form","Dropdown","Button","ButtonGroup","Col","XLSX","CSVLink","jsxDEV","_jsxDEV","SearchBar","title","titlecount","data","search","setSearch","_s","selectedFile","setSelectedFile","transformBack","header","endsWith","slice","startsWith","replace","split","map","word","index","charAt","toUpperCase","join","handleExport","title_name","transformedData","row","transformedRow","key","value","ws","utils","json_to_sheet","wb","book_new","book_append_sheet","writeFile","console","log","handleImport","fileInput","document","createElement","type","accept","click","filePromise","Promise","resolve","addEventListener","files","file","formData","FormData","append","response","fetch","method","body","error","className","children","style","fontFamily","paddingTop","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","padding","marginLeft","fontSize","textAlign","onClick","class","_c","$RefreshReg$"],"sources":["/Users/trtp/working/milo/final_pricecalc_master/frontend/src/components/SearchBar.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useMemo } from 'react'\nimport { Form, Dropdown, Button, ButtonGroup, Col } from 'react-bootstrap';\nimport * as XLSX from 'xlsx';\nimport { CSVLink } from 'react-csv';\n\n//to upload get title add .xlsx and post to api\nexport const SearchBar = ({ title, titlecount, data, search, setSearch }) => {\n    const [selectedFile, setSelectedFile] = useState(null);\n\n    function transformBack(header) {\n        if (header.endsWith('_')) {\n            header = header.slice(0, -1) + '%';\n        }\n        else if (header.startsWith('_')) {\n            header = header.replace('_', '/')\n        }\n\n        header = header.replace(/_/g, ' ');\n        header = header\n            .split(' ')\n            .map((word, index) => index === 0 ? word.charAt(0).toUpperCase() + word.slice(1) : word.charAt(0).toUpperCase() + word.slice(1))\n            .join(' ');\n\n        return header;\n    }\n\n    const handleExport = () => {\n        const title_name = title + '.xlsx';\n\n        const transformedData = data.map((row, index) => {\n            let transformedRow = {};\n            for (let key in row) {\n                let value = row[key];\n                if (typeof value === 'object' || value === '' || value === null) {\n                    continue;\n                }\n                if (data[index + 1] && data[index + 1][key]) {\n                    transformedRow[transformBack(key)] = value;\n                }\n            }\n            return transformedRow;\n        });\n\n        const ws = XLSX.utils.json_to_sheet(transformedData);\n        const wb = XLSX.utils.book_new();\n        XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\n        XLSX.writeFile(wb, title_name);\n\n        console.log('exported data complete:')\n    }\n\n\n    const handleImport = async () => {\n        try {\n            const fileInput = document.createElement('input');\n            fileInput.type = 'file';\n            fileInput.accept = '.xlsx';\n            fileInput.click();\n    \n            const filePromise = new Promise((resolve) => {\n                fileInput.addEventListener('change', () => {\n                    resolve(fileInput.files[0]);\n                });\n            });\n            const file = await filePromise;\n    \n    \n            if (file) {\n                console.log('file:', file);\n                const formData = new FormData();\n                formData.append('file_name', title + '.xlsx');\n                formData.append('file', file);\n\n                const response = await fetch('http://localhost:8000/upload', {\n                    method: 'POST',\n                    body: formData,\n                });\n                console.log(response.data)\n    \n                // const data = await response.json();\n                // console.log(data); // log the response from the server\n            }\n        } catch (error) {\n            console.error('Error uploading file:', error);\n        }\n    };\n\n    return (\n        <div className=\"d-flex justify-content-between p-2 mt-2\">\n            <h1 style={{ fontFamily: 'Roboto', paddingTop: 16 }} >\n                {title} : {titlecount}</h1>\n            <div style={{ display: 'flex', justifyContent: 'flex-end', padding: '12px' }}>\n                <button className=\"btn btn-dark\"\n                    style={{ marginLeft: '10px', fontSize: '20px', textAlign: 'center' }}\n                    title={`Upload: '${title}'`}\n                    onClick={handleImport}\n                >\n                    <i class=\"bi bi-upload\"></i>\n                </button>\n                <button className=\"btn btn-dark\"\n                    style={{ marginLeft: '10px', fontSize: '20px', paddingTop: 14 }}\n                    title={`Download:'${title}'`}\n                    onClick={handleExport}\n                >\n                    <i class=\"bi bi-cloud-download\"></i>\n                </button>\n            </div>\n        </div>\n    )\n}\n\n{/* <searchbar style={{ padding: 5 }}>\n    <ButtonGroup>\n        <Form.Control\n            type=\"text\"\n            placeholder=\"Filter\"\n            value={search}\n            onChange={e => setSearch(e.target.value)}\n            style={{\n                backgroundColor: search ? 'white' : 'grey',\n                borderColor: 'black'\n            }}\n            onFocus={e => e.target.style.backgroundColor = 'white'}\n            onBlur={e => e.target.style.backgroundColor = 'grey'}\n        />                        <Button variant='dark'>\n            <i className=\"bi bi-search\"></i>\n        </Button>\n    </ButtonGroup>\n</searchbar> */}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}